Q21,714553.0,->  Nested Loop Semi Join  (cost=2406.31..2860667.93 rows=1 width=34) (actual time=41.439..37001.073 rows=714553 loops=1)
Q3,313857.0,->  Sort  (cost=2539056.06..2546902.48 rows=3138570 width=20) (actual time=32908.516..32908.519 rows=10 loops=1)
Q18,305072.0,->  GroupAggregate  (cost=10211413.96..11041972.70 rows=30202136 width=39) (actual time=64979.846..64980.182 rows=99 loops=1)
Q18,76287.6,->  Hash Join  (cost=2188639.24..2804858.42 rows=7552474 width=39) (actual time=41160.500..46519.473 rows=99 loops=1)
Q18,76287.6,->  Hash Join  (cost=2119611.24..2622543.31 rows=7552474 width=20) (actual time=40332.001..45690.709 rows=99 loops=1)
Q18,76287.6,->  Hash  (cost=2804858.42..2804858.42 rows=7552474 width=39) (actual time=46519.664..46519.664 rows=99 loops=1)
Q18,43581.7,->  Sort  (cost=10211413.96..10286919.30 rows=30202136 width=39) (actual time=64979.831..64979.889 rows=693 loops=1)
Q18,43581.7,->  Hash Join  (cost=2899264.35..5633235.85 rows=30202136 width=39) (actual time=46736.641..64978.887 rows=693 loops=1)
Q18,40604.0,->  Hash  (cost=2069363.69..2069363.69 rows=4019804 width=4) (actual time=40227.870..40227.870 rows=99 loops=1)
Q18,40604.0,->  HashAggregate  (cost=1978918.10..2029165.65 rows=4019804 width=8) (actual time=36008.489..40227.676 rows=99 loops=1)
Q21,39661.0,->  Nested Loop Anti Join  (cost=2406.88..2860669.71 rows=1 width=26) (actual time=42.408..39866.202 rows=39661 loops=1)
Q10,28131.5,->  Sort  (cost=2273379.53..2274786.11 rows=562631 width=176) (actual time=32777.143..32777.148 rows=20 loops=1)
Q9,22883.7,->  Sort  (cost=1244386.27..1244386.62 rows=142 width=46) (actual time=90846.551..91417.246 rows=3249499 loops=1)
Q9,22883.7,->  Nested Loop  (cost=66999.74..1244376.97 rows=142 width=24) (actual time=904.181..81619.472 rows=3249499 loops=1)
Q9,22883.7,->  Nested Loop  (cost=66999.31..1244308.15 rows=142 width=24) (actual time=904.161..49136.156 rows=3249499 loops=1)
Q9,22883.7,->  Nested Loop  (cost=66999.01..1244262.33 rows=142 width=28) (actual time=904.150..38886.346 rows=3249499 loops=1)
Q9,22883.7,->  Hash Join  (cost=67001.30..1244381.19 rows=142 width=46) (actual time=904.238..84903.095 rows=3249499 loops=1)
Q2,4871.0,->  Merge Join  (cost=465687.84..884085.05 rows=1 width=190) (actual time=4745.447..6484.478 rows=4871 loops=1)
Q21,4044.0,->  HashAggregate  (cost=2860669.72..2860669.73 rows=1 width=26) (actual time=39917.300..39918.368 rows=4044 loops=1)
Q15,3828.0,->  Subquery Scan on revenue6  (cost=2011280.82..2011366.95 rows=3828 width=12) (actual time=39375.972..39397.321 rows=1 loops=1)
Q15,3828.0,->  Sort  (cost=2011594.76..2011604.33 rows=3828 width=12) (actual time=39397.340..39397.340 rows=1 loops=1)
Q15,3828.0,Merge Join  (cost=4005733.37..4010832.00 rows=3828 width=79) (actual time=39404.469..39404.470 rows=1 loops=1)
Q15,3828.0,->  HashAggregate  (cost=2011280.82..2011328.67 rows=3828 width=12) (actual time=39375.971..39397.318 rows=1 loops=1)
Q7,765.2,Sort  (cost=2139354.16..2139361.81 rows=3061 width=64) (actual time=21615.778..21615.779 rows=4 loops=1)
Q7,765.2,->  HashAggregate  (cost=2139131.01..2139176.93 rows=3061 width=64) (actual time=21615.716..21615.723 rows=4 loops=1)
Q8,363.5,Sort  (cost=1648478.91..1648480.73 rows=727 width=38) (actual time=11030.650..11030.650 rows=2 loops=1)
Q8,363.5,->  HashAggregate  (cost=1648431.64..1648444.36 rows=727 width=38) (actual time=11030.611..11030.613 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2860669.74..2860669.74 rows=1 width=26) (actual time=39919.471..39919.481 rows=100 loops=1)
Q21,100.0,Limit  (cost=2860669.74..2860669.74 rows=1 width=26) (actual time=39919.473..39919.494 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=884085.06..884085.07 rows=1 width=190) (actual time=6489.162..6489.171 rows=100 loops=1)
Q2,100.0,Limit  (cost=884085.06..884085.07 rows=1 width=190) (actual time=6489.164..6489.187 rows=100 loops=1)
Q11,36.8,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=6732.139..6733.155 rows=8685 loops=1)
Q11,36.8,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=6653.970..6727.360 rows=8685 loops=1)
Q3,27.5,->  HashAggregate  (cost=2439846.99..2471232.69 rows=3138570 width=20) (actual time=32837.560..32887.196 rows=114071 loops=1)
Q15,26.1,->  HashAggregate  (cost=1994052.18..1994090.46 rows=3828 width=12) (actual time=19316.890..19356.217 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=741472)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7832.80 rows=768480 width=0) (actual time=126.747..126.747 rows=10728960 loops=1)
Q3,10.3,->  Hash Join  (cost=763261.96..2392768.44 rows=3138570 width=20) (actual time=7820.816..32578.932 rows=301843 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2427.86 rows=322113 width=0) (actual time=34.648..34.648 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.014..0.075 rows=7 loops=433608)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.591..3.591 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.595..3.595 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.238..0.238 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.265..0.265 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.258..0.258 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.264..0.264 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.254..0.254 rows=23040 loops=1)
Q15,5.2,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.039..5.211 rows=18896 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.009..0.009 rows=1 loops=1197945)
Q5,5.0,Sort  (cost=1865790.05..1865790.11 rows=25 width=34) (actual time=15994.112..15994.112 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1865789.22..1865789.47 rows=25 width=34) (actual time=15994.061..15994.064 rows=5 loops=1)
Q4,5.0,Sort  (cost=1484473.17..1484473.17 rows=1 width=16) (actual time=12553.052..12553.052 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.08 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=573800)
Q4,5.0,->  HashAggregate  (cost=1484473.15..1484473.16 rows=1 width=16) (actual time=12552.999..12553.001 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=714553)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5811.76 rows=577176 width=0) (actual time=27.556..27.556 rows=2551040 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5708.29 rows=566829 width=0) (actual time=27.270..27.270 rows=2535680 loops=1)
Q13,4.3,Sort  (cost=846664.58..846665.08 rows=200 width=8) (actual time=28316.448..28316.453 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=846654.94..846656.94 rows=200 width=8) (actual time=28316.371..28316.379 rows=46 loops=1)
Q17,3.8,->  Nested Loop  (cost=82.82..114699.16 rows=20256 width=4) (actual time=1.717..188.058 rows=5233 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.014..0.016 rows=4 loops=454827)
Q4,3.4,->  Nested Loop Semi Join  (cost=5956.62..1483705.14 rows=153601 width=16) (actual time=27.750..12264.127 rows=525834 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.013..0.031 rows=3 loops=2013)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..245030.05 rows=32650940 width=0) (actual time=118.061..118.061 rows=10676480 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.292..0.362 rows=3 loops=21740)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..54438.61 rows=7253148 width=0) (actual time=27.104..27.104 rows=2538240 loops=1)
Q22,2.3,Sort  (cost=694562.99..694562.99 rows=3 width=20) (actual time=7956.196..7956.197 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641751.35..641751.39 rows=3 width=20) (actual time=7956.149..7956.150 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.032..0.048 rows=2 loops=6585)
Q20,2.0,->  Nested Loop  (cost=754.70..11669255.72 rows=29316 width=4) (actual time=12.744..8179.629 rows=58905 loops=1)
Q20,2.0,->  Hash  (cost=11669255.72..11669255.72 rows=29316 width=4) (actual time=8213.640..8213.640 rows=58905 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.80 rows=200180 width=0) (actual time=4.180..4.180 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3041097.88..3041097.88 rows=1 width=27) (actual time=31094.987..31094.988 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3041097.86..3041097.87 rows=1 width=27) (actual time=31094.935..31094.936 rows=2 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1913851.57 rows=803350 width=34) (actual time=41.132..24253.679 rows=1534969 loops=1)
Q16,1.9,->  Sort  (cost=404021.80..405514.06 rows=596905 width=40) (actual time=9792.089..9939.704 rows=1183835 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.535..3816.670 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54830.24..346757.29 rows=596905 width=40) (actual time=1132.761..6490.587 rows=1183835 loops=1)
Q10,1.9,->  Hash Join  (cost=343989.36..2238716.04 rows=562631 width=176) (actual time=9775.354..30591.135 rows=1120276 loops=1)
Q10,1.9,->  Hash Join  (cost=343987.80..2230978.30 rows=562631 width=154) (actual time=9775.330..30203.162 rows=1120276 loops=1)
Q10,1.9,->  Hash Join  (cost=274959.80..2153510.84 rows=562631 width=12) (actual time=8427.784..28038.985 rows=1120276 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1827907.41 rows=20134758 width=8) (actual time=0.013..18152.445 rows=37927958 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2336776.93 rows=392067 width=38) (actual time=41.371..31968.340 rows=741472 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.032..0.503 rows=56 loops=1)
Q20,1.5,Sort  (cost=11672065.23..11672068.17 rows=1173 width=51) (actual time=8244.919..8245.050 rows=1765 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669665.17..11672005.43 rows=1173 width=51) (actual time=8214.112..8242.913 rows=1765 loops=1)
Q1,1.5,Sort  (cost=4226344.36..4226344.37 rows=6 width=20) (actual time=91815.051..91815.052 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4226344.17..4226344.28 rows=6 width=20) (actual time=91815.001..91815.004 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2252781.81..2258408.12 rows=562631 width=176) (actual time=32456.107..32642.922 rows=374690 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..27320.23 rows=3637364 width=0) (actual time=28.077..28.077 rows=2551040 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.00 rows=597800 width=0) (actual time=4.175..4.175 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2868.42 rows=139340 width=0) (actual time=431.262..431.262 rows=190132 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2903.26..41838.93 rows=139340 width=24) (actual time=439.376..531.637 rows=190132 loops=1)
Q9,1.2,GroupAggregate  (cost=1244386.27..1244391.24 rows=142 width=46) (actual time=90856.351..93587.394 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91374.79 rows=9122679 width=0) (actual time=119.802..119.802 rows=10704640 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=118116 width=4) (actual time=0.011..864.375 rows=108402 loops=1)
Q9,1.0,->  Hash Join  (cost=66998.45..352673.58 rows=471713 width=16) (actual time=904.023..5352.928 rows=433608 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=118116 width=4) (actual time=903.525..903.525 rows=108402 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.693..2116.447 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=391.02..1601156.12 rows=114647 width=20) (actual time=6.877..8512.575 rows=119801 loops=1)
Q8,1.0,->  Nested Loop  (cost=390.59..1415294.20 rows=379585 width=16) (actual time=6.764..4154.369 rows=395493 loops=1)
Q8,1.0,->  Nested Loop  (cost=38721.46..1647543.82 rows=22871 width=16) (actual time=2220.103..10953.946 rows=24142 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.92 rows=31 width=20) (actual time=0.025..0.295 rows=30 loops=13149)
Q8,1.0,->  Hash Join  (cost=38723.03..1647974.22 rows=22871 width=38) (actual time=2220.152..10990.794 rows=24142 loops=1)
Q8,1.0,->  Hash Join  (cost=38721.17..1640145.49 rows=22929 width=16) (actual time=2220.092..10807.151 rows=24142 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2210.215..2210.215 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..386.88 rows=12593 width=0) (actual time=4.532..4.532 rows=13149 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=390.02..27187.84 rows=12593 width=4) (actual time=6.716..145.286 rows=13149 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.623..413.303 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=8) (actual time=0.007..3428.503 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2126351.77 rows=1464316 width=42) (actual time=608.290..20898.237 rows=1457974 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2138219.24 rows=60785 width=64) (actual time=655.322..21525.143 rows=58476 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..533422.40 rows=1208396 width=30) (actual time=608.255..8983.406 rows=1197945 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.036..568.347 rows=119840 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..44.616 rows=7994 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=607.692..607.692 rows=119840 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=46.831..46.831 rows=7994 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91573.96..1367266.24 rows=796711 width=8) (actual time=120.609..22683.101 rows=795614 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.711..1886.356 rows=299838 loops=1)
Q5,1.0,->  Nested Loop  (cost=66235.50..1845897.04 rows=1833363 width=46) (actual time=2029.409..15178.574 rows=1818864 loops=1)
Q5,1.0,->  Hash Join  (cost=70914.50..1865057.74 rows=73148 width=34) (actual time=2091.407..15906.083 rows=72916 loops=1)
Q5,1.0,->  Hash Join  (cost=66234.94..389017.09 rows=458459 width=38) (actual time=2029.387..7279.437 rows=454827 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=1998.827..1998.827 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=27893.30..337494.76 rows=2292293 width=8) (actual time=28.248..4356.040 rows=2275776 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.626..367.687 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5956.05..269654.69 rows=577176 width=20) (actual time=27.720..4854.187 rows=573800 loops=1)
Q3,1.0,->  Hash Join  (cost=105923.53..492009.74 rows=1444755 width=12) (actual time=393.871..7226.416 rows=1449544 loops=1)
Q3,1.0,->  Hash  (cost=492009.74..492009.74 rows=1444755 width=12) (actual time=7695.662..7695.662 rows=1449544 loops=1)
Q3,1.0,->  Hash  (cost=45936.82..45936.82 rows=298785 width=4) (actual time=364.643..364.643 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6849.31 rows=298785 width=0) (actual time=66.162..66.162 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56251.90..400691.25 rows=7253148 width=16) (actual time=27.262..4552.638 rows=7227967 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253192.78..1728872.53 rows=32650940 width=12) (actual time=118.809..19335.869 rows=32640999 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6924.01..45936.82 rows=298785 width=4) (actual time=74.664..289.094 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.014..3413.081 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=7261.855..7261.855 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597805.59..641314.01 rows=58311 width=20) (actual time=7746.620..7935.590 rows=63336 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6516.28 rows=379906 width=0) (actual time=74.924..74.924 rows=381177 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6611.26..51861.79 rows=379906 width=4) (actual time=82.724..309.811 rows=381177 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.294..39.923 rows=4044 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=41.088..41.088 rows=4044 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.282..39.264 rows=4044 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=4744.614..4880.088 rows=1586721 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.306..152.890 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7891 width=30) (actual time=0.027..966.190 rows=8133 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=164.737..3772.463 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=164.606..164.606 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.252..29.664 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.290..27.879 rows=3934 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.76 rows=20021 width=0) (actual time=8.683..8.683 rows=21740 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.275..27.325 rows=3934 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.27..34907.18 rows=22022 width=4) (actual time=12.259..273.919 rows=21740 loops=1)
Q19,1.0,->  Nested Loop  (cost=12889.51..616767.28 rows=1134 width=8) (actual time=33.145..1844.877 rows=1161 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4002.13 rows=399013 width=0) (actual time=4.153..4.153 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.35 rows=8064 width=0) (actual time=3.556..3.556 rows=8108 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.03 rows=8031 width=0) (actual time=3.385..3.385 rows=8015 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.99 rows=8028 width=0) (actual time=3.663..3.663 rows=7909 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=4754)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12884.77..26700.41 rows=4809 width=30) (actual time=32.086..285.292 rows=4754 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=16) (actual time=0.006..2560.399 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1676896.73 rows=60404273 width=8) (actual time=0.003..9813.340 rows=59984909 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1676896.73 rows=60404273 width=8) (actual time=0.034..8472.519 rows=59984909 loops=1)
Q18,1.0,Limit  (cost=10211413.96..10211416.71 rows=100 width=39) (actual time=64979.847..64980.193 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.039 rows=30 loops=2013)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.039 rows=30 loops=2013)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.55 rows=2012 width=0) (actual time=0.897..0.897 rows=2013 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.05..6662.09 rows=2012 width=4) (actual time=1.232..30.457 rows=2013 loops=1)
Q16,1.0,Sort  (cost=413833.63..413903.69 rows=28025 width=40) (actual time=10587.424..10590.072 rows=27838 loops=1)
Q16,1.0,->  Hash  (cost=51077.41..51077.41 rows=298928 width=40) (actual time=1130.290..1130.290 rows=296122 loops=1)
Q16,1.0,->  GroupAggregate  (cost=404021.80..411763.36 rows=28025 width=40) (actual time=9792.147..10529.403 rows=27838 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2502.59..51077.41 rows=298928 width=40) (actual time=34.708..1013.003 rows=296122 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1971080.66 rows=2297152 width=12) (actual time=0.010..17245.326 rows=2248207 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1971080.66 rows=2297152 width=12) (actual time=0.016..17921.009 rows=2248207 loops=1)
Q14,1.0,->  Hash Join  (cost=93546.92..1147157.45 rows=768480 width=29) (actual time=1309.393..23508.206 rows=772471 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8024.92..1050108.25 rows=768480 width=12) (actual time=127.505..21427.070 rows=772471 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..442530.20 rows=14879837 width=8) (actual time=0.024..6982.044 rows=14853004 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..734755.76 rows=14879837 width=8) (actual time=1201.663..17497.572 rows=15353025 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=20) (actual time=0.010..3920.884 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2431950.14 rows=292213 width=15) (actual time=0.027..22254.598 rows=313332 loops=1)
Q12,1.0,->  Hash Join  (cost=594902.33..3035984.13 rows=292213 width=27) (actual time=8295.410..30817.869 rows=313332 loops=1)
Q12,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=20) (actual time=8250.109..8250.109 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.301..38.734 rows=4049 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.299..25.245 rows=4049 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.188..2373.834 rows=323920 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=39.897..3969.895 rows=323920 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=39.765..39.765 rows=4049 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.092..26.092 rows=4049 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.274..24.608 rows=4049 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.285..38.096 rows=4049 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1827907.41 rows=59960919 width=20) (actual time=0.015..20100.607 rows=59542661 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1817035.59 rows=14903771 width=12) (actual time=0.012..16370.876 rows=14808323 loops=1)
Q10,1.0,->  Hash  (cost=267874.43..267874.43 rows=566829 width=8) (actual time=8424.464..8424.464 rows=560377 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5850.00..267874.43 rows=566829 width=8) (actual time=27.437..8162.847 rows=560377 loops=1)
