Q21,715962.0,->  Nested Loop Semi Join  (cost=2406.31..2843565.63 rows=1 width=34) (actual time=55.638..34669.117 rows=715962 loops=1)
Q3,316079.6,->  Sort  (cost=2535884.85..2543786.84 rows=3160796 width=20) (actual time=29578.663..29578.664 rows=10 loops=1)
Q18,303863.8,->  GroupAggregate  (cost=10171091.29..10998360.64 rows=30082522 width=39) (actual time=67158.131..67158.479 rows=99 loops=1)
Q18,75984.6,->  Hash Join  (cost=2180801.80..2794733.07 rows=7522476 width=39) (actual time=43319.930..48872.635 rows=99 loops=1)
Q18,75984.6,->  Hash Join  (cost=2111773.80..2612867.93 rows=7522476 width=20) (actual time=42436.518..47988.944 rows=99 loops=1)
Q18,75984.6,->  Hash  (cost=2794733.07..2794733.07 rows=7522476 width=39) (actual time=48872.835..48872.835 rows=99 loops=1)
Q18,43409.1,->  Sort  (cost=10171091.29..10246297.59 rows=30082522 width=39) (actual time=67158.121..67158.159 rows=693 loops=1)
Q18,43409.1,->  Hash Join  (cost=2888764.02..5611907.73 rows=30082522 width=39) (actual time=48997.983..67157.034 rows=693 loops=1)
Q18,40604.0,->  Hash  (cost=2061526.25..2061526.25 rows=4019804 width=4) (actual time=42325.818..42325.818 rows=99 loops=1)
Q18,40604.0,->  HashAggregate  (cost=1971080.66..2021328.21 rows=4019804 width=8) (actual time=36958.862..42325.607 rows=99 loops=1)
Q21,40120.0,->  Nested Loop Anti Join  (cost=2406.88..2843567.41 rows=1 width=26) (actual time=62.640..37545.092 rows=40120 loops=1)
Q10,28395.7,->  Sort  (cost=2286836.09..2288255.87 rows=567914 width=176) (actual time=31134.690..31134.692 rows=20 loops=1)
Q9,26188.9,->  Sort  (cost=1138293.02..1138293.34 rows=125 width=46) (actual time=86568.413..87036.834 rows=3273614 loops=1)
Q9,26188.9,->  Nested Loop  (cost=66824.57..1138284.76 rows=125 width=24) (actual time=797.462..78015.991 rows=3273614 loops=1)
Q9,26188.9,->  Nested Loop  (cost=66824.13..1138224.18 rows=125 width=24) (actual time=797.443..46738.414 rows=3273614 loops=1)
Q9,26188.9,->  Nested Loop  (cost=66823.84..1138183.85 rows=125 width=28) (actual time=797.431..36793.738 rows=3273614 loops=1)
Q9,26188.9,->  Hash Join  (cost=66826.13..1138288.67 rows=125 width=46) (actual time=797.516..81250.901 rows=3273614 loops=1)
Q2,4612.0,->  Merge Join  (cost=465687.84..882668.30 rows=1 width=190) (actual time=6274.890..8220.381 rows=4612 loops=1)
Q21,4054.0,->  HashAggregate  (cost=2843567.42..2843567.43 rows=1 width=26) (actual time=37598.629..37599.944 rows=4054 loops=1)
Q15,3729.0,->  Subquery Scan on revenue1  (cost=1868909.43..1868993.33 rows=3729 width=12) (actual time=44677.953..44699.936 rows=1 loops=1)
Q15,3729.0,->  Sort  (cost=1869214.55..1869223.87 rows=3729 width=12) (actual time=44699.956..44699.957 rows=1 loops=1)
Q15,3729.0,Merge Join  (cost=3721360.74..3726457.88 rows=3729 width=79) (actual time=44733.309..44733.311 rows=1 loops=1)
Q15,3729.0,->  HashAggregate  (cost=1868909.43..1868956.04 rows=3729 width=12) (actual time=44677.952..44699.933 rows=1 loops=1)
Q7,765.2,Sort  (cost=2135146.04..2135153.69 rows=3061 width=64) (actual time=24290.311..24290.311 rows=4 loops=1)
Q7,765.2,->  HashAggregate  (cost=2134922.89..2134968.81 rows=3061 width=64) (actual time=24290.246..24290.255 rows=4 loops=1)
Q8,363.5,Sort  (cost=1697785.84..1697787.66 rows=727 width=38) (actual time=10118.802..10118.802 rows=2 loops=1)
Q8,363.5,->  HashAggregate  (cost=1697738.56..1697751.29 rows=727 width=38) (actual time=10118.761..10118.763 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2843567.44..2843567.44 rows=1 width=26) (actual time=37601.135..37601.142 rows=100 loops=1)
Q21,100.0,Limit  (cost=2843567.44..2843567.44 rows=1 width=26) (actual time=37601.137..37601.156 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=882668.31..882668.32 rows=1 width=190) (actual time=8225.151..8225.166 rows=100 loops=1)
Q2,100.0,Limit  (cost=882668.31..882668.32 rows=1 width=190) (actual time=8225.153..8225.181 rows=100 loops=1)
Q11,34.1,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=6753.888..6755.006 rows=9384 loops=1)
Q11,34.1,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=6674.646..6748.773 rows=9384 loops=1)
Q3,27.8,->  HashAggregate  (cost=2435973.23..2467581.19 rows=3160796 width=20) (actual time=29515.897..29557.275 rows=113475 loops=1)
Q15,26.8,->  HashAggregate  (cost=1852061.99..1852099.28 rows=3729 width=12) (actual time=24114.393..24144.983 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=743234)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7832.80 rows=768480 width=0) (actual time=126.514..126.514 rows=10728960 loops=1)
Q3,10.5,->  Hash Join  (cost=763293.16..2388561.29 rows=3160796 width=20) (actual time=7665.871..29296.055 rows=300046 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2415.21 rows=320427 width=0) (actual time=34.726..34.726 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.014..0.071 rows=8 loops=436052)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.601..3.601 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.597..3.597 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.242..0.242 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.479..0.479 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.264..0.264 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.265..0.265 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.254..0.254 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1204076)
Q5,5.0,Sort  (cost=1910705.92..1910705.99 rows=25 width=34) (actual time=15182.259..15182.260 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1910705.09..1910705.34 rows=25 width=34) (actual time=15182.214..15182.215 rows=5 loops=1)
Q4,5.0,Sort  (cost=1479429.64..1479429.65 rows=1 width=16) (actual time=12214.305..12214.306 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.12 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=573836)
Q4,5.0,->  HashAggregate  (cost=1479429.62..1479429.63 rows=1 width=16) (actual time=12214.258..12214.259 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=715962)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5761.57 rows=572157 width=0) (actual time=27.582..27.582 rows=2551040 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5761.57 rows=572157 width=0) (actual time=27.442..27.442 rows=2551040 loops=1)
Q13,4.3,Sort  (cost=849473.13..849473.63 rows=200 width=8) (actual time=28678.745..28678.749 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=849463.49..849465.49 rows=200 width=8) (actual time=28678.675..28678.682 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.04 rows=15 width=16) (actual time=0.009..0.011 rows=4 loops=456068)
Q17,3.5,->  Nested Loop  (cost=78.33..112052.07 rows=19763 width=4) (actual time=1.766..198.445 rows=5607 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5905.17..1478668.30 rows=152265 width=16) (actual time=27.771..11931.422 rows=525936 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.61 rows=10 width=12) (actual time=0.014..0.032 rows=3 loops=2074)
Q15,3.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..252159.71 rows=33601562 width=0) (actual time=119.413..119.413 rows=10728960 loops=1)
Q15,3.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..252159.71 rows=33601562 width=0) (actual time=118.577..118.577 rows=10728960 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..242971.31 rows=32376441 width=0) (actual time=118.537..118.537 rows=10676480 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.286..0.357 rows=3 loops=21730)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..54925.53 rows=7318070 width=0) (actual time=27.110..27.110 rows=2538240 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..44336.41 rows=5906188 width=0) (actual time=27.296..27.296 rows=2545920 loops=1)
Q22,2.3,Sort  (cost=694657.49..694657.50 rows=3 width=20) (actual time=8709.679..8709.680 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641782.73..641782.78 rows=3 width=20) (actual time=8709.631..8709.633 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.033..0.049 rows=2 loops=6221)
Q20,2.0,->  Nested Loop  (cost=754.49..11669240.06 rows=29316 width=4) (actual time=13.568..8096.290 rows=59198 loops=1)
Q20,2.0,->  Hash  (cost=11669240.06..11669240.06 rows=29316 width=4) (actual time=8131.410..8131.410 rows=59198 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.80 rows=200180 width=0) (actual time=4.179..4.179 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3038002.52..3038002.53 rows=1 width=27) (actual time=34388.858..34388.858 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3038002.50..3038002.51 rows=1 width=27) (actual time=34388.809..34388.810 rows=2 loops=1)
Q21,1.9,->  Nested Loop  (cost=2405.75..2322853.43 rows=389735 width=38) (actual time=55.623..30347.245 rows=743234 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1902482.88 rows=798572 width=34) (actual time=55.495..22860.884 rows=1536728 loops=1)
Q16,1.9,->  Sort  (cost=403609.28..405094.06 rows=593912 width=40) (actual time=9976.202..10153.513 rows=1182255 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.494..3634.644 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54756.33..346653.45 rows=593912 width=40) (actual time=1252.894..6454.616 rows=1182255 loops=1)
Q10,1.9,->  Hash Join  (cost=345709.49..2251847.11 rows=567914 width=176) (actual time=7521.914..28929.526 rows=1109530 loops=1)
Q10,1.9,->  Hash Join  (cost=345707.93..2244036.73 rows=567914 width=154) (actual time=7521.885..28537.662 rows=1109530 loops=1)
Q10,1.9,->  Hash Join  (cost=276679.93..2166490.02 rows=567914 width=12) (actual time=5894.998..26137.077 rows=1109530 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817035.59 rows=20015002 width=8) (actual time=0.008..16892.399 rows=37928797 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.034..0.452 rows=56 loops=1)
Q20,1.5,Sort  (cost=11672049.58..11672052.51 rows=1173 width=51) (actual time=8163.081..8163.212 rows=1801 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669649.51..11671989.78 rows=1173 width=51) (actual time=8131.856..8161.402 rows=1801 loops=1)
Q1,1.5,Sort  (cost=4213339.32..4213339.33 rows=6 width=20) (actual time=89999.791..89999.791 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4213339.13..4213339.24 rows=6 width=20) (actual time=89999.744..89999.745 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2266044.96..2271724.10 rows=567914 width=176) (actual time=30783.482..31000.399 rows=371950 loops=1)
Q9,1.4,GroupAggregate  (cost=1138293.02..1138297.40 rows=125 width=46) (actual time=86577.778..89136.561 rows=175 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.00 rows=597800 width=0) (actual time=4.141..4.141 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2872.76 rows=139773 width=0) (actual time=687.690..687.690 rows=190587 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2907.71..41854.75 rows=139773 width=24) (actual time=695.732..793.542 rows=190587 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91722.27 rows=9157427 width=0) (actual time=119.469..119.469 rows=10718720 loops=1)
Q15,1.1,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.024..25.052 rows=83967 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=104102 width=4) (actual time=0.013..759.732 rows=109013 loops=1)
Q9,1.0,->  Hash Join  (cost=66823.27..351938.73 rows=415746 width=16) (actual time=797.360..4670.800 rows=436052 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=104102 width=4) (actual time=796.845..796.845 rows=109013 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.732..1897.372 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=406.43..1650131.94 rows=118888 width=20) (actual time=6.911..7850.616 rows=120134 loops=1)
Q8,1.0,->  Nested Loop  (cost=406.00..1457393.66 rows=393624 width=16) (actual time=6.872..4418.004 rows=396831 loops=1)
Q8,1.0,->  Nested Loop  (cost=38736.87..1696817.97 rows=23717 width=16) (actual time=1995.111..10043.001 rows=23930 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.38 rows=31 width=20) (actual time=0.026..0.321 rows=30 loops=13191)
Q8,1.0,->  Hash Join  (cost=38738.44..1697264.22 rows=23717 width=38) (actual time=1995.169..10079.857 rows=23930 loops=1)
Q8,1.0,->  Hash Join  (cost=38736.58..1689145.70 rows=23778 width=16) (actual time=1995.095..9905.541 rows=23930 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1985.390..1985.390 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..402.18 rows=13033 width=0) (actual time=4.668..4.668 rows=13191 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=405.43..27749.50 rows=13033 width=4) (actual time=6.841..50.652 rows=13191 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.633..370.407 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=8) (actual time=0.004..3156.552 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2122161.48 rows=1461427 width=42) (actual time=749.187..23473.995 rows=1464466 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2134012.92 rows=60665 width=64) (actual time=796.564..24196.835 rows=58325 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..532478.49 rows=1205994 width=30) (actual time=749.155..9872.115 rows=1204076 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.038..704.406 rows=119947 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..44.905 rows=7989 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=748.641..748.641 rows=119947 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=47.073..47.073 rows=7989 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91922.38..1369759.49 rows=800463 width=8) (actual time=120.228..23193.177 rows=797503 loops=1)
Q5,1.0,->  Nested Loop  (cost=83247.70..1890917.05 rows=1820811 width=46) (actual time=2385.297..14385.906 rows=1824400 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.721..2241.613 rows=299838 loops=1)
Q5,1.0,->  Hash Join  (cost=87926.70..1909978.61 rows=72648 width=34) (actual time=2449.350..15097.005 rows=72677 loops=1)
Q5,1.0,->  Hash Join  (cost=83247.13..439441.07 rows=455274 width=38) (actual time=2385.275..8825.766 rows=456068 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2355.775..2355.775 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=44905.50..388010.32 rows=2276368 width=8) (actual time=27.461..5591.362 rows=2281679 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.628..437.652 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5904.61..269527.96 rows=572157 width=20) (actual time=27.750..4746.402 rows=573836 loops=1)
Q3,1.0,->  Hash Join  (cost=106519.36..493886.22 rows=1467322 width=12) (actual time=399.165..7061.990 rows=1458879 loops=1)
Q3,1.0,->  Hash  (cost=493886.22..493886.22 rows=1467322 width=12) (actual time=7540.193..7540.193 rows=1458879 loops=1)
Q3,1.0,->  Hash  (cost=46004.82..46004.82 rows=300760 width=4) (actual time=369.961..369.961 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6892.13 rows=300760 width=0) (actual time=66.765..66.765 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56755.04..402005.92 rows=7318070 width=16) (actual time=27.266..4374.973 rows=7296925 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251065.42..1723313.93 rows=32376441 width=12) (actual time=119.286..16693.138 rows=32365888 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6967.32..46004.82 rows=300760 width=4) (actual time=75.333..294.153 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.012..3673.095 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=7730.046..7730.046 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597810.04..641344.04 rows=58492 width=20) (actual time=8490.004..8688.684 rows=63600 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6545.16 rows=381087 width=0) (actual time=74.405..74.405 rows=381760 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6640.43..51921.96 rows=381087 width=4) (actual time=82.185..565.518 rows=381760 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.532..53.854 rows=4054 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=55.357..55.357 rows=4054 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.519..52.879 rows=4054 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6274.651..6415.841 rows=1602920 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.309..144.414 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7855 width=30) (actual time=0.047..1174.198 rows=7748 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=155.564..5188.033 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=155.427..155.427 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.257..28.015 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.295..28.402 rows=4007 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.197..9.197 rows=21730 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.278..27.803 rows=4007 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.843..300.963 rows=21730 loops=1)
Q19,1.0,->  Nested Loop  (cost=12881.55..610180.81 rows=1117 width=8) (actual time=31.941..1407.585 rows=1126 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4002.13 rows=399013 width=0) (actual time=4.145..4.145 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.99 rows=7928 width=0) (actual time=3.274..3.274 rows=7979 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.87 rows=7914 width=0) (actual time=3.507..3.507 rows=8005 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.83 rows=7912 width=0) (actual time=3.441..3.441 rows=7852 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12880.99..26531.11 rows=4737 width=30) (actual time=31.292..266.035 rows=4859 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.007..2739.406 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670255.44 rows=60165044 width=8) (actual time=0.004..7569.110 rows=60045379 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670255.44 rows=60165044 width=8) (actual time=0.012..8554.089 rows=60045379 loops=1)
Q18,1.0,Limit  (cost=10171091.29..10171094.04 rows=100 width=39) (actual time=67158.134..67158.497 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.039 rows=30 loops=2074)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.039 rows=30 loops=2074)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.08 rows=1965 width=0) (actual time=1.013..1.013 rows=2074 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.57..6521.22 rows=1965 width=4) (actual time=1.358..33.859 rows=2074 loops=1)
Q16,1.0,Sort  (cost=413370.86..413440.57 rows=27884 width=40) (actual time=10822.676..10825.244 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51022.24..51022.24 rows=297429 width=40) (actual time=1250.466..1250.466 rows=295730 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403609.28..411312.02 rows=27884 width=40) (actual time=9976.260..10764.133 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2489.56..51022.24 rows=297429 width=40) (actual time=34.780..1130.828 rows=295730 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=252721.30..1829598.73 rows=2246326 width=12) (actual time=119.326..22085.922 rows=2247566 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=252721.30..1829598.73 rows=2246326 width=12) (actual time=120.175..18749.563 rows=2247566 loops=1)
Q14,1.0,->  Hash Join  (cost=93546.92..1147157.45 rows=768480 width=29) (actual time=1388.506..24575.677 rows=773156 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8024.92..1050108.25 rows=768480 width=12) (actual time=127.274..22528.473 rows=773156 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..443852.85 rows=14954132 width=8) (actual time=0.020..7670.388 rows=14839161 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..737192.83 rows=14954132 width=8) (actual time=851.938..18171.473 rows=15339177 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=20) (actual time=0.012..4843.062 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2429549.60 rows=290114 width=15) (actual time=0.070..23785.505 rows=311516 loops=1)
Q12,1.0,->  Hash Join  (cost=594309.84..3032925.51 rows=290114 width=27) (actual time=9951.744..34071.821 rows=311516 loops=1)
Q12,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=20) (actual time=9901.361..9901.361 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.294..39.790 rows=3991 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.294..25.215 rows=3991 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.140..2378.370 rows=319280 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=40.885..3989.170 rows=319280 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=40.826..40.826 rows=3991 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.075..26.075 rows=3991 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.267..24.556 rows=3991 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.277..39.080 rows=3991 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1827907.41 rows=59635793 width=20) (actual time=0.015..18649.145 rows=59214186 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1827907.41 rows=14992944 width=12) (actual time=0.018..17107.604 rows=14808293 loops=1)
Q10,1.0,->  Hash  (cost=269527.96..269527.96 rows=572157 width=8) (actual time=5890.579..5890.579 rows=554297 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5904.61..269527.96 rows=572157 width=8) (actual time=27.611..5683.219 rows=554297 loops=1)
