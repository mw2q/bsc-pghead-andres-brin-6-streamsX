Q21,694294.0,->  Nested Loop Semi Join  (cost=2406.31..2860667.93 rows=1 width=34) (actual time=41.546..36166.439 rows=694294 loops=1)
Q3,317507.8,->  Sort  (cost=2547044.44..2554982.13 rows=3175078 width=20) (actual time=33192.232..33192.234 rows=10 loops=1)
Q18,301723.2,->  GroupAggregate  (cost=10201359.93..11031098.84 rows=30172324 width=39) (actual time=68306.352..68306.690 rows=100 loops=1)
Q18,67972.5,->  Hash Join  (cost=2186685.88..2802331.38 rows=7544952 width=39) (actual time=42953.071..49127.098 rows=111 loops=1)
Q18,67972.5,->  Hash Join  (cost=2117657.88..2620129.10 rows=7544952 width=20) (actual time=41755.265..47928.864 rows=111 loops=1)
Q18,67972.5,->  Hash  (cost=2802331.38..2802331.38 rows=7544952 width=39) (actual time=49127.380..49127.380 rows=111 loops=1)
Q18,43041.8,->  Sort  (cost=10201359.93..10276790.74 rows=30172324 width=39) (actual time=68306.333..68306.375 rows=701 loops=1)
Q21,39071.0,->  Nested Loop Anti Join  (cost=2406.88..2860669.71 rows=1 width=26) (actual time=44.121..38857.100 rows=39071 loops=1)
Q18,38831.8,->  Hash Join  (cost=2896643.27..5627916.13 rows=30172324 width=39) (actual time=50083.627..68304.984 rows=777 loops=1)
Q18,36214.4,->  Hash  (cost=2067410.33..2067410.33 rows=4019804 width=4) (actual time=41635.872..41635.872 rows=111 loops=1)
Q18,36214.4,->  HashAggregate  (cost=1976964.74..2027212.29 rows=4019804 width=8) (actual time=36695.259..41635.701 rows=111 loops=1)
Q9,28852.6,->  Sort  (cost=1062154.53..1062154.82 rows=113 width=46) (actual time=87541.203..88091.918 rows=3260344 loops=1)
Q9,28852.6,->  Nested Loop  (cost=66699.44..1062147.00 rows=113 width=24) (actual time=884.235..78700.728 rows=3260344 loops=1)
Q9,28852.6,->  Nested Loop  (cost=66699.01..1062092.23 rows=113 width=24) (actual time=884.186..51293.221 rows=3260344 loops=1)
Q9,28852.6,->  Nested Loop  (cost=66698.71..1062055.77 rows=113 width=28) (actual time=884.176..41468.716 rows=3260344 loops=1)
Q9,28852.6,->  Hash Join  (cost=66701.00..1062150.68 rows=113 width=46) (actual time=884.287..81862.274 rows=3260344 loops=1)
Q10,28520.2,->  Sort  (cost=2287180.80..2288606.81 rows=570405 width=176) (actual time=31219.875..31219.879 rows=20 loops=1)
Q2,4671.0,->  Merge Join  (cost=465687.84..890533.73 rows=1 width=190) (actual time=6565.052..8875.454 rows=4671 loops=1)
Q21,3933.0,->  HashAggregate  (cost=2860669.72..2860669.73 rows=1 width=26) (actual time=38905.266..38906.265 rows=3933 loops=1)
Q15,3732.0,->  Subquery Scan on revenue3  (cost=1801109.92..1801193.89 rows=3732 width=12) (actual time=48306.356..48326.987 rows=1 loops=1)
Q15,3732.0,->  Sort  (cost=1801415.30..1801424.63 rows=3732 width=12) (actual time=48327.009..48327.010 rows=1 loops=1)
Q15,3732.0,Merge Join  (cost=3585747.84..3590845.02 rows=3732 width=79) (actual time=48355.092..48355.095 rows=1 loops=1)
Q15,3732.0,->  HashAggregate  (cost=1801109.92..1801156.57 rows=3732 width=12) (actual time=48306.356..48326.987 rows=1 loops=1)
Q7,765.2,Sort  (cost=2130936.94..2130944.59 rows=3061 width=64) (actual time=20789.436..20789.437 rows=4 loops=1)
Q7,765.2,->  HashAggregate  (cost=2130713.80..2130759.71 rows=3061 width=64) (actual time=20789.298..20789.305 rows=4 loops=1)
Q8,363.5,Sort  (cost=1730616.58..1730618.40 rows=727 width=38) (actual time=14937.582..14937.582 rows=2 loops=1)
Q8,363.5,->  HashAggregate  (cost=1730569.31..1730582.03 rows=727 width=38) (actual time=14937.545..14937.545 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2860669.74..2860669.74 rows=1 width=26) (actual time=38907.423..38907.431 rows=100 loops=1)
Q21,100.0,Limit  (cost=2860669.74..2860669.74 rows=1 width=26) (actual time=38907.425..38907.445 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=890533.74..890533.75 rows=1 width=190) (actual time=8880.321..8880.334 rows=100 loops=1)
Q2,100.0,Limit  (cost=890533.74..890533.75 rows=1 width=190) (actual time=8880.322..8880.346 rows=100 loops=1)
Q11,33.8,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=6888.136..6889.179 rows=9467 loops=1)
Q11,33.8,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=6810.909..6882.916 rows=9467 loops=1)
Q3,28.0,->  HashAggregate  (cost=2446681.36..2478432.14 rows=3175078 width=20) (actual time=33133.441..33171.297 rows=113275 loops=1)
Q15,26.7,->  HashAggregate  (cost=1784248.27..1784285.59 rows=3732 width=12) (actual time=22727.746..22753.022 rows=100000 loops=1)
Q14,15.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7241.66 rows=709366 width=0) (actual time=124.019..124.019 rows=10728960 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=720772)
Q3,10.5,->  Hash Join  (cost=766676.43..2399055.19 rows=3175078 width=20) (actual time=8233.016..32860.167 rows=299763 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2416.91 rows=320653 width=0) (actual time=34.746..34.746 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.081 rows=7 loops=435100)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.604..3.604 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.588..3.588 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.236..0.236 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.246..0.246 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.265..0.265 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.245..0.245 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.008..0.009 rows=1 loops=1201246)
Q5,5.0,Sort  (cost=1904882.58..1904882.64 rows=25 width=34) (actual time=14573.654..14573.654 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1904881.75..1904882.00 rows=25 width=34) (actual time=14573.613..14573.614 rows=5 loops=1)
Q4,5.0,Sort  (cost=1481054.77..1481054.78 rows=1 width=16) (actual time=14328.865..14328.865 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.06 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=574673)
Q4,5.0,->  HashAggregate  (cost=1481054.75..1481054.76 rows=1 width=16) (actual time=14328.815..14328.817 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=694294)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5808.08 rows=576808 width=0) (actual time=27.363..27.363 rows=2538240 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5786.66 rows=574666 width=0) (actual time=27.418..27.418 rows=2551040 loops=1)
Q13,4.3,Sort  (cost=849473.13..849473.63 rows=200 width=8) (actual time=27030.806..27030.811 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=849463.49..849465.49 rows=200 width=8) (actual time=27030.739..27030.747 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.04 rows=15 width=16) (actual time=0.011..0.012 rows=4 loops=456297)
Q17,3.6,->  Nested Loop  (cost=82.60..113518.50 rows=19965 width=4) (actual time=1.878..174.929 rows=5449 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5952.85..1480283.41 rows=154269 width=16) (actual time=27.562..14006.585 rows=526879 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.011..0.026 rows=3 loops=2030)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243735.99 rows=32478399 width=0) (actual time=119.981..119.981 rows=10728960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.50 rows=1 width=8) (actual time=0.297..0.367 rows=3 loops=21473)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55274.62 rows=7364616 width=0) (actual time=27.311..27.311 rows=2551040 loops=1)
Q15,2.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..229548.67 rows=30586756 width=0) (actual time=119.358..119.358 rows=10728960 loops=1)
Q15,2.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..229548.67 rows=30586756 width=0) (actual time=118.192..118.192 rows=10728960 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..44208.14 rows=5889085 width=0) (actual time=28.093..28.093 rows=2538240 loops=1)
Q22,2.3,Sort  (cost=694650.00..694650.01 rows=3 width=20) (actual time=8602.680..8602.681 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641779.56..641779.60 rows=3 width=20) (actual time=8602.634..8602.637 rows=7 loops=1)
Q20,2.1,->  Nested Loop  (cost=677.99..10613879.71 rows=26651 width=4) (actual time=12.865..8224.481 rows=58230 loops=1)
Q20,2.1,->  Hash  (cost=10613879.71..10613879.71 rows=26651 width=4) (actual time=8258.784..8258.784 rows=58230 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.033..0.048 rows=2 loops=6307)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.80 rows=200180 width=0) (actual time=4.191..4.191 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3041068.24..3041068.24 rows=1 width=27) (actual time=33739.936..33739.936 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3041068.22..3041068.23 rows=1 width=27) (actual time=33739.886..33739.886 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=403650.69..405136.19 rows=594197 width=40) (actual time=9765.976..9909.549 rows=1186059 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.523..3658.933 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54765.50..346665.47 rows=594197 width=40) (actual time=1234.713..6402.928 rows=1186059 loops=1)
Q10,1.9,->  Hash Join  (cost=345804.21..2252038.35 rows=570405 width=176) (actual time=7062.229..28881.396 rows=1135293 loops=1)
Q10,1.9,->  Hash Join  (cost=345802.65..2244193.72 rows=570405 width=154) (actual time=7062.201..28482.555 rows=1135293 loops=1)
Q10,1.9,->  Hash Join  (cost=276774.65..2166609.65 rows=570405 width=12) (actual time=5686.286..26379.608 rows=1135293 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1827907.41 rows=20134758 width=8) (actual time=0.016..18862.280 rows=37927958 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2336776.93 rows=392067 width=38) (actual time=41.478..31669.362 rows=720772 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1913851.57 rows=803350 width=34) (actual time=41.408..24748.132 rows=1491902 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.032..0.476 rows=56 loops=1)
Q20,1.6,Sort  (cost=10616648.13..10616650.79 rows=1066 width=51) (actual time=8290.162..8290.304 rows=1764 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10614255.85..10616594.52 rows=1066 width=51) (actual time=8259.250..8288.892 rows=1764 loops=1)
Q9,1.5,GroupAggregate  (cost=1062154.53..1062158.49 rows=113 width=46) (actual time=87551.070..90257.501 rows=175 loops=1)
Q1,1.5,Sort  (cost=4184091.55..4184091.57 rows=6 width=20) (actual time=89658.098..89658.098 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4184091.37..4184091.48 rows=6 width=20) (actual time=89658.051..89658.052 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2266298.48..2272002.53 rows=570405 width=176) (actual time=30852.143..31083.615 rows=378604 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.00 rows=597800 width=0) (actual time=4.146..4.146 rows=405760 loops=1)
Q15,1.4,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.026..21.092 rows=70652 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2872.27 rows=139730 width=0) (actual time=682.057..682.057 rows=190883 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2907.21..41853.12 rows=139730 width=24) (actual time=690.247..782.579 rows=190883 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=94092 width=4) (actual time=0.008..843.741 rows=108775 loops=1)
Q9,1.1,->  Hash Join  (cost=66698.15..351413.84 rows=375769 width=16) (actual time=884.085..5017.834 rows=435100 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=94092 width=4) (actual time=883.595..883.595 rows=108775 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91358.98 rows=9121098 width=0) (actual time=118.947..118.947 rows=10676480 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.55 rows=18000 width=0) (actual time=8.685..8.685 rows=21473 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.671..2605.731 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.21..1682772.63 rows=121327 width=20) (actual time=7.413..11929.467 rows=120981 loops=1)
Q8,1.0,->  Nested Loop  (cost=420.77..1486086.06 rows=401701 width=16) (actual time=6.876..6778.076 rows=398388 loops=1)
Q8,1.0,->  Nested Loop  (cost=38751.65..1729629.84 rows=24204 width=16) (actual time=2716.776..14854.137 rows=24223 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.21..1730085.23 rows=24204 width=38) (actual time=2716.824..14895.212 rows=24223 loops=1)
Q8,1.0,->  Hash Join  (cost=38751.35..1721800.41 rows=24265 width=16) (actual time=2716.745..14713.284 rows=24223 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2706.960..2706.960 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..412.78 rows=13380 width=0) (actual time=4.563..4.563 rows=13291 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=13291)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=416.12..28180.29 rows=13380 width=4) (actual time=6.800..211.266 rows=13291 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.035..0.478 rows=30 loops=13291)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.632..510.600 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=8) (actual time=0.006..3053.174 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2117970.36 rows=1458517 width=42) (actual time=795.497..20060.731 rows=1459047 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2129805.64 rows=60544 width=64) (actual time=864.887..20698.185 rows=58570 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531536.45 rows=1203596 width=30) (actual time=795.291..8580.656 rows=1201246 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.042..748.501 rows=119857 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.037..66.177 rows=8017 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=794.763..794.763 rows=119857 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=69.300..69.300 rows=8017 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91558.12..1364325.82 rows=796573 width=8) (actual time=119.725..21501.544 rows=795891 loops=1)
Q5,1.0,->  Nested Loop  (cost=83117.78..1885138.79 rows=1815379 width=46) (actual time=2095.820..13793.910 rows=1824279 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.667..1959.783 rows=299436 loops=1)
Q5,1.0,->  Hash Join  (cost=87796.78..1904157.44 rows=72431 width=34) (actual time=2148.931..14490.483 rows=73354 loops=1)
Q5,1.0,->  Hash Join  (cost=83117.21..438279.70 rows=453955 width=38) (actual time=2095.801..7615.538 rows=456297 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2065.551..2065.551 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=44775.58..386886.86 rows=2269776 width=8) (actual time=28.252..4681.153 rows=2284056 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.619..382.295 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5952.28..268379.40 rows=576808 width=20) (actual time=27.542..5670.041 rows=574673 loops=1)
Q3,1.0,->  Hash Join  (cost=106880.09..496362.65 rows=1476655 width=12) (actual time=683.158..7625.450 rows=1460045 loops=1)
Q3,1.0,->  Hash  (cost=496362.65..496362.65 rows=1476655 width=12) (actual time=8105.843..8105.843 rows=1460045 loops=1)
Q3,1.0,->  Hash  (cost=46004.82..46004.82 rows=300760 width=4) (actual time=653.669..653.669 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6892.13 rows=300760 width=0) (actual time=65.129..65.129 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57115.77..404214.47 rows=7364616 width=16) (actual time=27.467..4675.678 rows=7302353 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251855.59..1730689.58 rows=32478399 width=12) (actual time=120.738..19600.619 rows=32282372 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6967.32..46004.82 rows=300760 width=4) (actual time=73.711..564.472 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.012..3749.643 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=7656.245..7656.245 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597809.54..641341.00 rows=58474 width=20) (actual time=8391.596..8581.753 rows=63404 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6544.26 rows=380969 width=0) (actual time=83.162..83.162 rows=381765 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6639.51..51917.94 rows=380969 width=4) (actual time=91.706..556.271 rows=381765 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.280..40.272 rows=3933 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=41.353..41.353 rows=3933 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.267..39.644 rows=3933 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6564.392..6702.412 rows=1602943 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.304..144.319 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8057 width=30) (actual time=0.348..1547.692 rows=7905 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=155.531..5482.940 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=155.395..155.395 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.250..27.987 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.297..28.553 rows=3961 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.279..27.971 rows=3961 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.56..33178.47 rows=20020 width=4) (actual time=12.201..306.019 rows=21473 loops=1)
Q19,1.0,->  Nested Loop  (cost=12890.62..618893.37 rows=1137 width=8) (actual time=32.430..2392.715 rows=1109 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4002.13 rows=399013 width=0) (actual time=4.155..4.155 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.91 rows=8119 width=0) (actual time=3.612..3.612 rows=8160 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.51 rows=8080 width=0) (actual time=3.571..3.571 rows=8006 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.03 rows=8034 width=0) (actual time=3.332..3.332 rows=7912 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=4741)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12885.88..26739.61 rows=4826 width=30) (actual time=31.949..280.045 rows=4741 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=16) (actual time=0.006..2727.309 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1675241.49 rows=60344649 width=8) (actual time=0.004..8985.954 rows=60045826 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1675241.49 rows=60344649 width=8) (actual time=0.014..8336.849 rows=60045826 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.039 rows=30 loops=2030)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.039 rows=30 loops=2030)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.34 rows=1991 width=0) (actual time=1.022..1.022 rows=2030 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.84..6601.32 rows=1991 width=4) (actual time=1.383..26.320 rows=2030 loops=1)
Q16,1.0,Sort  (cost=413417.11..413486.85 rows=27898 width=40) (actual time=10556.829..10559.139 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51029.63..51029.63 rows=297572 width=40) (actual time=1232.234..1232.234 rows=296681 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403650.69..411357.14 rows=27898 width=40) (actual time=9766.025..10498.047 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2491.30..51029.63 rows=297572 width=40) (actual time=34.807..1112.725 rows=296681 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=230110.73..1761766.07 rows=2248220 width=12) (actual time=118.947..20826.786 rows=2244011 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=230110.73..1761766.07 rows=2248220 width=12) (actual time=120.123..23510.131 rows=2244011 loops=1)
Q14,1.0,->  Hash Join  (cost=92941.00..1119274.22 rows=709366 width=29) (actual time=1570.102..24096.712 rows=721917 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7419.00..1023111.73 rows=709366 width=12) (actual time=124.773..21963.774 rows=721917 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..443852.85 rows=14954132 width=8) (actual time=0.017..7289.126 rows=14839161 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..737192.83 rows=14954132 width=8) (actual time=775.319..17298.639 rows=15339177 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=20) (actual time=0.011..4723.888 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2431950.14 rows=291605 width=15) (actual time=0.254..23602.548 rows=312566 loops=1)
Q12,1.0,->  Hash Join  (cost=594902.33..3035965.13 rows=291605 width=27) (actual time=9473.124..33416.517 rows=312566 loops=1)
Q12,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=20) (actual time=9418.042..9418.042 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.299..38.386 rows=3988 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.297..25.665 rows=3988 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.573..2429.334 rows=319040 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=39.459..4061.864 rows=319040 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=39.396..39.396 rows=3988 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.490..26.490 rows=3988 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.263..25.025 rows=3988 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.282..37.710 rows=3988 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1820668.05 rows=59085583 width=20) (actual time=0.013..18729.513 rows=58903863 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1827907.41 rows=14992944 width=12) (actual time=0.019..17708.405 rows=14808293 loops=1)
Q10,1.0,->  Hash  (cost=269591.32..269591.32 rows=574666 width=8) (actual time=5682.892..5682.892 rows=567386 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5930.33..269591.32 rows=574666 width=8) (actual time=27.580..5490.344 rows=567386 loops=1)
