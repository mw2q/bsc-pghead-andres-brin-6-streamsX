Q21,707485.0,->  Nested Loop Semi Join  (cost=2406.31..2860667.93 rows=1 width=34) (actual time=39.784..35954.210 rows=707485 loops=1)
Q18,402695.1,->  GroupAggregate  (cost=10211413.96..11041972.70 rows=30202136 width=39) (actual time=67007.183..67007.435 rows=75 loops=1)
Q3,317205.6,->  Sort  (cost=2540834.72..2548764.86 rows=3172056 width=20) (actual time=35080.471..35080.472 rows=10 loops=1)
Q18,100699.6,->  Hash Join  (cost=2188639.24..2804858.42 rows=7552474 width=39) (actual time=42117.098..48636.299 rows=75 loops=1)
Q18,100699.6,->  Hash Join  (cost=2119611.24..2622543.31 rows=7552474 width=20) (actual time=40963.100..47482.081 rows=75 loops=1)
Q18,100699.6,->  Hash  (cost=2804858.42..2804858.42 rows=7552474 width=39) (actual time=48636.456..48636.456 rows=75 loops=1)
Q18,57527.8,->  Sort  (cost=10211413.96..10286919.30 rows=30202136 width=39) (actual time=67007.169..67007.205 rows=525 loops=1)
Q18,57527.8,->  Hash Join  (cost=2899264.35..5633235.85 rows=30202136 width=39) (actual time=48702.519..67006.402 rows=525 loops=1)
Q18,53597.3,->  Hash  (cost=2069363.69..2069363.69 rows=4019804 width=4) (actual time=40836.279..40836.279 rows=75 loops=1)
Q18,53597.3,->  HashAggregate  (cost=1978918.10..2029165.65 rows=4019804 width=8) (actual time=36341.209..40836.049 rows=75 loops=1)
Q21,39427.0,->  Nested Loop Anti Join  (cost=2406.88..2860669.71 rows=1 width=26) (actual time=40.349..38789.472 rows=39427 loops=1)
Q10,27911.1,->  Sort  (cost=2277019.51..2278415.07 rows=558222 width=176) (actual time=31799.701..31799.707 rows=20 loops=1)
Q9,26716.6,->  Sort  (cost=1122512.24..1122512.55 rows=122 width=46) (actual time=89845.923..90329.550 rows=3259436 loops=1)
Q9,26716.6,->  Nested Loop  (cost=66799.71..1122504.16 rows=122 width=24) (actual time=948.509..81101.052 rows=3259436 loops=1)
Q9,26716.6,->  Nested Loop  (cost=66799.27..1122445.04 rows=122 width=24) (actual time=948.469..50169.518 rows=3259436 loops=1)
Q9,26716.6,->  Nested Loop  (cost=66798.98..1122405.67 rows=122 width=28) (actual time=948.457..40045.460 rows=3259436 loops=1)
Q9,26716.6,->  Hash Join  (cost=66801.27..1122508.01 rows=122 width=46) (actual time=948.574..84432.977 rows=3259436 loops=1)
Q2,4833.0,->  Merge Join  (cost=465687.84..883889.64 rows=1 width=190) (actual time=6191.476..7920.295 rows=4833 loops=1)
Q21,4009.0,->  HashAggregate  (cost=2860669.72..2860669.73 rows=1 width=26) (actual time=38841.033..38842.286 rows=4009 loops=1)
Q15,3712.0,->  Subquery Scan on revenue2  (cost=1335634.30..1335717.82 rows=3712 width=12) (actual time=47177.960..47190.007 rows=1 loops=1)
Q15,3712.0,->  Sort  (cost=1335937.91..1335947.19 rows=3712 width=12) (actual time=47190.026..47190.027 rows=1 loops=1)
Q15,3712.0,Merge Join  (cost=2654899.04..2659995.92 rows=3712 width=79) (actual time=47202.039..47202.041 rows=1 loops=1)
Q15,3712.0,->  HashAggregate  (cost=1335634.30..1335680.70 rows=3712 width=12) (actual time=47177.958..47190.004 rows=1 loops=1)
Q7,765.2,Sort  (cost=2139354.16..2139361.81 rows=3061 width=64) (actual time=21428.095..21428.095 rows=4 loops=1)
Q7,765.2,->  HashAggregate  (cost=2139131.01..2139176.93 rows=3061 width=64) (actual time=21428.029..21428.036 rows=4 loops=1)
Q8,363.5,Sort  (cost=1677326.95..1677328.77 rows=727 width=38) (actual time=10567.063..10567.063 rows=2 loops=1)
Q8,363.5,->  HashAggregate  (cost=1677279.67..1677292.40 rows=727 width=38) (actual time=10567.025..10567.026 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2860669.74..2860669.74 rows=1 width=26) (actual time=38843.421..38843.427 rows=100 loops=1)
Q21,100.0,Limit  (cost=2860669.74..2860669.74 rows=1 width=26) (actual time=38843.422..38843.438 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=883889.65..883889.65 rows=1 width=190) (actual time=7925.084..7925.096 rows=100 loops=1)
Q2,100.0,Limit  (cost=883889.65..883889.65 rows=1 width=190) (actual time=7925.085..7925.108 rows=100 loops=1)
Q11,32.1,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=6767.896..6769.029 rows=9940 loops=1)
Q11,32.1,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=6689.568..6762.469 rows=9940 loops=1)
Q3,28.0,->  HashAggregate  (cost=2440567.17..2472287.73 rows=3172056 width=20) (actual time=35010.489..35059.471 rows=113222 loops=1)
Q15,26.9,->  HashAggregate  (cost=1318877.31..1318914.43 rows=3712 width=12) (actual time=23037.620..23075.705 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=734431)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7794.76 rows=764676 width=0) (actual time=119.252..119.252 rows=10676480 loops=1)
Q3,10.6,->  Hash Join  (cost=766401.38..2392986.33 rows=3172056 width=20) (actual time=8910.167..34722.683 rows=298768 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2415.61 rows=320480 width=0) (actual time=34.792..34.792 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.078 rows=8 loops=434128)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.594..3.594 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.595..3.595 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.282..0.282 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.252..0.252 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.009..0.009 rows=1 loops=1205392)
Q5,5.0,Sort  (cost=1914699.90..1914699.97 rows=25 width=34) (actual time=17767.710..17767.710 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1914699.07..1914699.32 rows=25 width=34) (actual time=17767.664..17767.664 rows=5 loops=1)
Q4,5.0,Sort  (cost=1490140.92..1490140.92 rows=1 width=16) (actual time=12413.713..12413.714 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.04 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=572592)
Q4,5.0,->  HashAggregate  (cost=1490140.90..1490140.91 rows=1 width=16) (actual time=12413.664..12413.665 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=707485)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5663.86 rows=562386 width=0) (actual time=27.358..27.358 rows=2540800 loops=1)
Q4,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5868.23 rows=582823 width=0) (actual time=27.418..27.418 rows=2551040 loops=1)
Q13,4.3,Sort  (cost=849473.13..849473.63 rows=200 width=8) (actual time=28078.612..28078.616 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=849463.49..849465.49 rows=200 width=8) (actual time=28078.538..28078.547 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.04 rows=15 width=16) (actual time=0.014..0.016 rows=4 loops=456052)
Q17,3.5,->  Nested Loop  (cost=82.90..115141.14 rows=20235 width=4) (actual time=1.648..207.467 rows=5650 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=6014.50..1489365.38 rows=155104 width=16) (actual time=27.617..12117.586 rows=525076 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.016..0.038 rows=3 loops=2045)
Q15,3.3,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.028..9.093 rows=29990 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.324..0.392 rows=3 loops=21823)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55952.17 rows=7454956 width=0) (actual time=27.374..27.374 rows=2551040 loops=1)
Q3,2.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..241075.87 rows=32123716 width=0) (actual time=119.368..119.368 rows=10728960 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..44428.48 rows=5918464 width=0) (actual time=27.337..27.337 rows=2551040 loops=1)
Q22,2.3,Sort  (cost=694684.74..694684.75 rows=3 width=20) (actual time=9266.470..9266.471 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641794.20..641794.24 rows=3 width=20) (actual time=9266.424..9266.426 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.034..0.050 rows=2 loops=6557)
Q20,2.0,->  Nested Loop  (cost=754.49..11669240.06 rows=29316 width=4) (actual time=13.067..8750.820 rows=59143 loops=1)
Q20,2.0,->  Hash  (cost=11669240.06..11669240.06 rows=29316 width=4) (actual time=8785.564..8785.564 rows=59143 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.80 rows=200180 width=0) (actual time=4.218..4.218 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403595.47..405079.93 rows=593782 width=40) (actual time=10485.589..10641.726 rows=1188453 loops=1)
Q16,2.0,->  Hash Join  (cost=54757.23..346653.05 rows=593782 width=40) (actual time=1304.438..7044.124 rows=1188453 loops=1)
Q12,2.0,Sort  (cost=3041017.63..3041017.64 rows=1 width=27) (actual time=32635.437..32635.437 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3041017.61..3041017.62 rows=1 width=27) (actual time=32635.387..32635.387 rows=2 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=1.130..4078.520 rows=7995520 loops=1)
Q10,1.9,->  Hash Join  (cost=344327.63..2242627.65 rows=558222 width=176) (actual time=8995.349..29645.833 rows=1080274 loops=1)
Q10,1.9,->  Hash Join  (cost=344326.07..2234950.54 rows=558222 width=154) (actual time=8995.321..29267.741 rows=1080274 loops=1)
Q10,1.9,->  Hash Join  (cost=275298.07..2157549.21 rows=558222 width=12) (actual time=7595.439..27148.553 rows=1080274 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1827907.41 rows=20134758 width=8) (actual time=0.013..17987.443 rows=37927958 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2336776.93 rows=392067 width=38) (actual time=39.757..31462.992 rows=734431 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1913851.57 rows=803350 width=34) (actual time=39.712..23998.016 rows=1522267 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.039..1.080 rows=56 loops=1)
Q20,1.5,Sort  (cost=11672049.58..11672052.51 rows=1173 width=51) (actual time=8816.844..8816.973 rows=1796 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669649.51..11671989.78 rows=1173 width=51) (actual time=8785.982..8815.419 rows=1796 loops=1)
Q1,1.5,Sort  (cost=4207427.96..4207427.97 rows=6 width=20) (actual time=91545.810..91545.810 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4207427.77..4207427.88 rows=6 width=20) (actual time=91545.756..91545.758 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2256583.20..2262165.42 rows=558222 width=176) (actual time=31467.426..31665.752 rows=371343 loops=1)
Q9,1.4,GroupAggregate  (cost=1122512.24..1122516.51 rows=122 width=46) (actual time=89855.156..92427.598 rows=175 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.00 rows=597800 width=0) (actual time=4.155..4.155 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2874.30 rows=139932 width=0) (actual time=708.709..708.709 rows=190578 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2909.29..41860.50 rows=139932 width=24) (actual time=716.805..1149.485 rows=190578 loops=1)
Q18,1.3,Limit  (cost=10211413.96..10211416.71 rows=100 width=39) (actual time=67007.185..67007.446 rows=75 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91267.55 rows=9111955 width=0) (actual time=118.309..118.309 rows=10664960 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=102113 width=4) (actual time=0.013..908.597 rows=108532 loops=1)
Q9,1.0,->  Hash Join  (cost=66798.41..351834.43 rows=407802 width=16) (actual time=948.409..5102.490 rows=434128 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=102113 width=4) (actual time=947.893..947.893 rows=108532 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.717..2028.675 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=396.99..1629805.62 rows=117191 width=20) (actual time=7.122..8155.833 rows=121346 loops=1)
Q8,1.0,->  Nested Loop  (cost=396.56..1439817.71 rows=388007 width=16) (actual time=7.060..4282.202 rows=399589 loops=1)
Q8,1.0,->  Nested Loop  (cost=38727.43..1676372.18 rows=23379 width=16) (actual time=2129.898..10491.127 rows=24320 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.62 rows=31 width=20) (actual time=0.026..0.302 rows=30 loops=13305)
Q8,1.0,->  Hash Join  (cost=38728.99..1676812.09 rows=23379 width=38) (actual time=2129.947..10527.888 rows=24320 loops=1)
Q8,1.0,->  Hash Join  (cost=38727.14..1668809.61 rows=23438 width=16) (actual time=2129.866..10346.449 rows=24320 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2120.742..2120.742 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..392.78 rows=12847 width=0) (actual time=4.750..4.750 rows=13305 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=395.99..27511.61 rows=12847 width=4) (actual time=6.990..140.023 rows=13305 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.629..396.287 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=8) (actual time=0.006..3018.390 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2126351.77 rows=1464316 width=42) (actual time=834.696..20720.770 rows=1459028 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2138219.24 rows=60785 width=64) (actual time=882.244..21337.942 rows=58613 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..533422.40 rows=1208396 width=30) (actual time=834.666..8675.596 rows=1205392 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.041..789.272 rows=120381 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.038..44.336 rows=7982 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=834.158..834.158 rows=120381 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=46.461..46.461 rows=7982 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91363.43..1362855.42 rows=383520 width=8) (actual time=119.440..25945.884 rows=382438 loops=1)
Q5,1.0,->  Nested Loop  (cost=83340.95..1894881.17 rows=1824411 width=46) (actual time=2082.569..16828.199 rows=1825463 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.715..1947.392 rows=299493 loops=1)
Q5,1.0,->  Hash Join  (cost=88019.95..1913971.16 rows=72791 width=34) (actual time=2143.932..17677.957 rows=72585 loops=1)
Q5,1.0,->  Hash Join  (cost=83340.39..440274.67 rows=456220 width=38) (actual time=2082.547..8779.696 rows=456052 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2053.102..2053.102 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=44998.75..388816.71 rows=2281100 width=8) (actual time=27.497..5649.875 rows=2281755 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.627..379.633 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=6013.94..269797.28 rows=582823 width=20) (actual time=27.584..4123.574 rows=572592 loops=1)
Q3,1.0,->  Hash Join  (cost=107550.94..498650.36 rows=1491538 width=12) (actual time=691.435..8286.871 rows=1478400 loops=1)
Q3,1.0,->  Hash  (cost=498650.36..498650.36 rows=1491538 width=12) (actual time=8783.448..8783.448 rows=1478400 loops=1)
Q3,1.0,->  Hash  (cost=45983.65..45983.65 rows=300110 width=4) (actual time=661.915..661.915 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6879.25 rows=300110 width=0) (actual time=64.278..64.278 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57815.91..406043.86 rows=7454956 width=16) (actual time=27.535..5266.978 rows=7389199 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=249106.80..1723507.25 rows=32123716 width=12) (actual time=120.111..20376.485 rows=31932756 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6954.28..45983.65 rows=300110 width=4) (actual time=72.567..572.683 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.014..3876.729 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=7919.723..7919.723 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597811.62..641355.00 rows=58559 width=20) (actual time=8687.338..9239.283 rows=63232 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6548.41 rows=381519 width=0) (actual time=79.900..79.900 rows=381129 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6643.79..51936.66 rows=381519 width=4) (actual time=88.214..585.272 rows=381129 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.333..38.612 rows=4010 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=39.670..39.670 rows=4010 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.319..37.889 rows=4010 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6191.045..6330.714 rows=1602888 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.313..145.622 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7886 width=30) (actual time=0.209..932.245 rows=8042 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=156.882..5092.682 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=156.740..156.740 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.257..28.254 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.272..28.295 rows=3924 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.114..9.114 rows=21823 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.255..27.709 rows=3924 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.729..164.249 rows=21823 loops=1)
Q19,1.0,->  Nested Loop  (cost=12871.85..614498.99 rows=1125 width=8) (actual time=33.622..1430.855 rows=1172 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4002.13 rows=399013 width=0) (actual time=4.302..4.302 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.31 rows=8058 width=0) (actual time=3.561..3.561 rows=8100 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.95 rows=8025 width=0) (actual time=3.423..3.423 rows=8051 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.47 rows=7875 width=0) (actual time=3.526..3.526 rows=7904 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=4862)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12867.11..26642.06 rows=4791 width=30) (actual time=32.093..283.096 rows=4862 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=16) (actual time=0.006..3000.034 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1676896.73 rows=60404273 width=8) (actual time=0.004..9265.734 rows=59984909 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1676896.73 rows=60404273 width=8) (actual time=0.042..8404.099 rows=59984909 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.038 rows=30 loops=2045)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.038 rows=30 loops=2045)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.63 rows=2020 width=0) (actual time=0.951..0.951 rows=2045 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.13..6683.35 rows=2020 width=4) (actual time=1.297..34.820 rows=2045 loops=1)
Q16,1.0,Sort  (cost=413354.88..413424.57 rows=27878 width=40) (actual time=11297.872..11300.357 rows=27837 loops=1)
Q16,1.0,->  Hash  (cost=51023.95..51023.95 rows=297364 width=40) (actual time=1300.764..1300.764 rows=297276 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403595.47..411296.53 rows=27878 width=40) (actual time=10485.644..11239.105 rows=27837 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2489.95..51023.95 rows=297364 width=40) (actual time=34.868..1177.963 rows=297276 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..74825.69 rows=9957026 width=0) (actual time=118.815..118.815 rows=10718720 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..74825.69 rows=9957026 width=0) (actual time=118.522..118.522 rows=10728960 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=75384.26..1296534.65 rows=2234266 width=12) (actual time=119.327..20794.531 rows=2245325 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=75384.26..1296534.65 rows=2234266 width=12) (actual time=119.678..22138.561 rows=2245325 loops=1)
Q14,1.0,->  Hash Join  (cost=93507.93..1141902.77 rows=764676 width=29) (actual time=1584.292..25896.991 rows=748601 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7985.93..1044910.63 rows=764676 width=12) (actual time=120.024..23526.282 rows=748601 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..443852.85 rows=14954132 width=8) (actual time=0.024..7507.633 rows=14839161 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..737192.83 rows=14954132 width=8) (actual time=1017.545..17674.318 rows=15339177 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=20) (actual time=0.009..4420.233 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2431950.14 rows=290567 width=15) (actual time=0.150..23147.005 rows=312239 loops=1)
Q12,1.0,->  Hash Join  (cost=594902.33..3035932.69 rows=290567 width=27) (actual time=8842.744..32315.327 rows=312239 loops=1)
Q12,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=20) (actual time=8797.447..8797.447 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.282..38.831 rows=3945 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.278..25.148 rows=3945 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.050..2424.305 rows=315600 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=39.844..3960.822 rows=315600 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=39.795..39.795 rows=3945 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.990..25.990 rows=3945 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.254..24.515 rows=3945 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.267..38.184 rows=3945 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1827907.41 rows=59488009 width=20) (actual time=0.013..20344.569 rows=59065628 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1820668.05 rows=14933565 width=12) (actual time=0.018..16413.158 rows=14823192 loops=1)
Q10,1.0,->  Hash  (cost=268268.25..268268.25 rows=562386 width=8) (actual time=7592.130..7592.130 rows=561837 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5804.46..268268.25 rows=562386 width=8) (actual time=27.544..7363.771 rows=561837 loops=1)
