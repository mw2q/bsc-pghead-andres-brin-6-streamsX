Q21,697281.0,->  Nested Loop Semi Join  (cost=2406.31..2846432.73 rows=1 width=34) (actual time=32.625..33916.262 rows=697281 loops=1)
Q18,359549.2,->  GroupAggregate  (cost=10211413.96..11041972.70 rows=30202136 width=39) (actual time=67322.212..67322.502 rows=84 loops=1)
Q3,315239.4,->  Sort  (cost=2552098.13..2559979.12 rows=3152394 width=20) (actual time=34380.528..34380.529 rows=10 loops=1)
Q18,89910.4,->  Hash Join  (cost=2188639.24..2804858.42 rows=7552474 width=39) (actual time=43271.243..49226.213 rows=84 loops=1)
Q18,89910.4,->  Hash Join  (cost=2119611.24..2622543.31 rows=7552474 width=20) (actual time=42116.946..48071.674 rows=84 loops=1)
Q18,89910.4,->  Hash  (cost=2804858.42..2804858.42 rows=7552474 width=39) (actual time=49226.362..49226.362 rows=84 loops=1)
Q18,51364.1,->  Sort  (cost=10211413.96..10286919.30 rows=30202136 width=39) (actual time=67322.191..67322.240 rows=588 loops=1)
Q18,51364.1,->  Hash Join  (cost=2899264.35..5633235.85 rows=30202136 width=39) (actual time=49506.334..67321.364 rows=588 loops=1)
Q18,47854.8,->  Hash  (cost=2069363.69..2069363.69 rows=4019804 width=4) (actual time=42012.219..42012.219 rows=84 loops=1)
Q18,47854.8,->  HashAggregate  (cost=1978918.10..2029165.65 rows=4019804 width=8) (actual time=37168.242..42012.025 rows=84 loops=1)
Q21,38955.0,->  Nested Loop Anti Join  (cost=2406.88..2846434.51 rows=1 width=26) (actual time=32.742..36696.417 rows=38955 loops=1)
Q10,28644.8,->  Sort  (cost=2287525.54..2288957.78 rows=572896 width=176) (actual time=30114.467..30114.470 rows=20 loops=1)
Q9,26120.2,->  Sort  (cost=1138171.88..1138172.19 rows=125 width=46) (actual time=87387.279..87915.978 rows=3265029 loops=1)
Q9,26120.2,->  Nested Loop  (cost=66824.73..1138163.62 rows=125 width=24) (actual time=900.961..78568.332 rows=3265029 loops=1)
Q9,26120.2,->  Nested Loop  (cost=66824.29..1138103.04 rows=125 width=24) (actual time=900.933..48393.714 rows=3265029 loops=1)
Q9,26120.2,->  Nested Loop  (cost=66824.00..1138062.71 rows=125 width=28) (actual time=900.924..38319.142 rows=3265029 loops=1)
Q9,26120.2,->  Hash Join  (cost=66826.29..1138167.53 rows=125 width=46) (actual time=901.014..81842.067 rows=3265029 loops=1)
Q2,4556.0,->  Merge Join  (cost=465687.84..892341.32 rows=1 width=190) (actual time=4992.239..6947.367 rows=4556 loops=1)
Q21,3945.0,->  HashAggregate  (cost=2846434.51..2846434.52 rows=1 width=26) (actual time=36743.400..36744.424 rows=3945 loops=1)
Q15,3716.0,->  Subquery Scan on revenue4  (cost=2010101.20..2010184.81 rows=3716 width=12) (actual time=39800.095..39813.479 rows=1 loops=1)
Q15,3716.0,->  Sort  (cost=2010405.16..2010414.45 rows=3716 width=12) (actual time=39813.503..39813.504 rows=1 loops=1)
Q15,3716.0,Merge Join  (cost=4003867.18..4008964.12 rows=3716 width=79) (actual time=39839.005..39839.007 rows=1 loops=1)
Q15,3716.0,->  HashAggregate  (cost=2010101.20..2010147.65 rows=3716 width=12) (actual time=39800.094..39813.476 rows=1 loops=1)
Q7,765.2,Sort  (cost=2139354.16..2139361.81 rows=3061 width=64) (actual time=21426.509..21426.510 rows=4 loops=1)
Q7,765.2,->  HashAggregate  (cost=2139131.01..2139176.93 rows=3061 width=64) (actual time=21426.443..21426.452 rows=4 loops=1)
Q8,363.5,Sort  (cost=1690534.74..1690536.56 rows=727 width=38) (actual time=10721.745..10721.745 rows=2 loops=1)
Q8,363.5,->  HashAggregate  (cost=1690487.47..1690500.19 rows=727 width=38) (actual time=10721.707..10721.707 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2846434.53..2846434.54 rows=1 width=26) (actual time=36745.528..36745.535 rows=100 loops=1)
Q21,100.0,Limit  (cost=2846434.53..2846434.54 rows=1 width=26) (actual time=36745.530..36745.548 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=892341.33..892341.33 rows=1 width=190) (actual time=6951.995..6952.009 rows=100 loops=1)
Q2,100.0,Limit  (cost=892341.33..892341.33 rows=1 width=190) (actual time=6951.997..6952.026 rows=100 loops=1)
Q11,32.1,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=5641.293..5642.478 rows=9964 loops=1)
Q11,32.1,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=5562.108..5635.826 rows=9964 loops=1)
Q3,27.6,->  HashAggregate  (cost=2452452.09..2483976.03 rows=3152394 width=20) (actual time=34319.133..34359.645 rows=113910 loops=1)
Q15,26.9,->  HashAggregate  (cost=1993378.11..1993415.27 rows=3716 width=12) (actual time=19603.865..19632.764 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=723427)
Q14,13.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8109.21 rows=796121 width=0) (actual time=119.128..119.128 rows=10686720 loops=1)
Q3,10.4,->  Hash Join  (cost=766770.36..2405166.18 rows=3152394 width=20) (actual time=8439.034..34040.599 rows=301377 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2409.41 rows=319653 width=0) (actual time=34.703..34.703 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.074 rows=8 loops=435128)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.597..3.597 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.598..3.598 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.290..0.290 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.252..0.252 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.271..0.271 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.242..0.242 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.009..0.009 rows=1 loops=1200465)
Q5,5.0,Sort  (cost=1854296.36..1854296.42 rows=25 width=34) (actual time=18910.102..18910.103 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1854295.53..1854295.78 rows=25 width=34) (actual time=18910.058..18910.059 rows=5 loops=1)
Q4,5.0,Sort  (cost=1475719.63..1475719.64 rows=1 width=16) (actual time=14585.126..14585.127 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.15 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=568242)
Q4,5.0,->  HashAggregate  (cost=1475719.61..1475719.62 rows=1 width=16) (actual time=14585.079..14585.081 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=697281)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5730.80 rows=569080 width=0) (actual time=27.466..27.466 rows=2548480 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5811.76 rows=577176 width=0) (actual time=27.436..27.436 rows=2551040 loops=1)
Q13,4.3,Sort  (cost=847665.75..847666.25 rows=200 width=8) (actual time=28376.908..28376.913 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=847656.11..847658.11 rows=200 width=8) (actual time=28376.834..28376.842 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.019..0.020 rows=4 loops=455588)
Q17,3.6,->  Nested Loop  (cost=82.66..113850.26 rows=20045 width=4) (actual time=1.676..204.531 rows=5508 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5873.64..1474961.63 rows=151597 width=16) (actual time=27.681..14279.535 rows=521334 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.014..0.034 rows=3 loops=2062)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..246617.79 rows=32862639 width=0) (actual time=119.283..119.283 rows=10728960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.29 rows=1 width=8) (actual time=0.296..0.365 rows=3 loops=21781)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..54597.06 rows=7274275 width=0) (actual time=27.306..27.306 rows=2551040 loops=1)
Q22,2.3,Sort  (cost=694823.55..694823.56 rows=3 width=20) (actual time=9921.382..9921.382 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641858.78..641858.83 rows=3 width=20) (actual time=9921.329..9921.329 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.036..0.052 rows=2 loops=6156)
Q20,2.0,->  Nested Loop  (cost=754.62..11676089.72 rows=29333 width=4) (actual time=13.340..8281.006 rows=58863 loops=1)
Q20,2.0,->  Hash  (cost=11676089.72..11676089.72 rows=29333 width=4) (actual time=8315.440..8315.440 rows=58863 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.80 rows=200180 width=0) (actual time=4.187..4.187 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403424.26..404905.69 rows=592574 width=40) (actual time=8926.077..9070.997 rows=1188823 loops=1)
Q16,2.0,->  Hash Join  (cost=54722.64..346606.38 rows=592574 width=40) (actual time=1277.897..5564.543 rows=1188823 loops=1)
Q12,2.0,Sort  (cost=3031874.86..3031874.87 rows=1 width=27) (actual time=33801.175..33801.175 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3031874.84..3031874.85 rows=1 width=27) (actual time=33801.119..33801.120 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=345898.96..2252229.63 rows=572896 width=176) (actual time=6898.536..27865.223 rows=1148672 loops=1)
Q10,2.0,->  Hash Join  (cost=345897.39..2244350.75 rows=572896 width=154) (actual time=6898.507..27469.097 rows=1148672 loops=1)
Q10,2.0,->  Hash Join  (cost=276869.39..2166729.31 rows=572896 width=12) (actual time=5586.289..25471.688 rows=1148672 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.552..2701.451 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1818858.64 rows=20035084 width=8) (actual time=0.015..16553.314 rows=37966905 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2325187.87 rows=390126 width=38) (actual time=32.593..29801.809 rows=723427 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1904389.25 rows=799373 width=34) (actual time=32.553..22395.263 rows=1496360 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.501 rows=56 loops=1)
Q20,1.5,Sort  (cost=11678899.44..11678902.37 rows=1173 width=51) (actual time=8346.360..8346.488 rows=1770 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11676499.38..11678839.64 rows=1173 width=51) (actual time=8315.926..8344.900 rows=1770 loops=1)
Q15,1.5,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.041..19.020 rows=64983 loops=1)
Q1,1.5,Sort  (cost=4193634.72..4193634.73 rows=6 width=20) (actual time=89366.237..89366.238 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4193634.53..4193634.64 rows=6 width=20) (actual time=89366.184..89366.186 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2266552.03..2272280.99 rows=572896 width=176) (actual time=29748.714..29976.962 rows=381815 loops=1)
Q9,1.4,GroupAggregate  (cost=1138171.88..1138176.26 rows=125 width=46) (actual time=87396.711..90061.190 rows=175 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..27157.75 rows=3615700 width=0) (actual time=27.936..27.936 rows=2535680 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.00 rows=597800 width=0) (actual time=4.134..4.134 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2907.34 rows=140437 width=0) (actual time=722.837..722.837 rows=191057 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2942.45..41906.92 rows=140437 width=24) (actual time=731.157..1156.329 rows=191057 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91400.78 rows=9125278 width=0) (actual time=130.532..130.532 rows=10708480 loops=1)
Q18,1.1,Limit  (cost=10211413.96..10211416.71 rows=100 width=39) (actual time=67322.214..67322.514 rows=84 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=104115 width=4) (actual time=0.009..861.133 rows=108782 loops=1)
Q9,1.0,->  Hash Join  (cost=66823.44..351939.42 rows=415798 width=16) (actual time=900.853..5030.311 rows=435128 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=104115 width=4) (actual time=900.391..900.391 rows=108782 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.699..1901.597 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=401.92..1642928.00 rows=118286 width=20) (actual time=7.156..8444.591 rows=119913 loops=1)
Q8,1.0,->  Nested Loop  (cost=401.49..1451165.60 rows=391631 width=16) (actual time=7.016..4334.726 rows=394841 loops=1)
Q8,1.0,->  Nested Loop  (cost=38732.36..1689571.52 rows=23597 width=16) (actual time=1999.398..10646.834 rows=24085 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.47 rows=31 width=20) (actual time=0.026..0.305 rows=30 loops=13196)
Q8,1.0,->  Hash Join  (cost=38733.92..1690015.53 rows=23597 width=38) (actual time=1999.448..10683.864 rows=24085 loops=1)
Q8,1.0,->  Hash Join  (cost=38732.07..1681938.29 rows=23657 width=16) (actual time=1999.373..10504.471 rows=24085 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1990.225..1990.225 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..397.68 rows=12967 width=0) (actual time=4.755..4.755 rows=13196 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=400.92..27664.11 rows=12967 width=4) (actual time=6.983..176.546 rows=13196 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.629..371.230 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=8) (actual time=0.006..3301.791 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2126351.77 rows=1464316 width=42) (actual time=613.457..20702.804 rows=1456433 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2138219.24 rows=60785 width=64) (actual time=661.246..21334.204 rows=58104 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..533422.40 rows=1208396 width=30) (actual time=613.433..8870.717 rows=1200465 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.039..573.133 rows=120150 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..45.506 rows=7951 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=612.928..612.928 rows=120150 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=47.716..47.716 rows=7951 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91600.19..1367655.95 rows=797653 width=8) (actual time=131.342..20919.050 rows=796299 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.682..2518.703 rows=300270 loops=1)
Q5,1.0,->  Nested Loop  (cost=66069.61..1834493.82 rows=1822460 width=46) (actual time=2666.831..18094.134 rows=1821342 loops=1)
Q5,1.0,->  Hash Join  (cost=70748.61..1853568.40 rows=72713 width=34) (actual time=2717.726..18818.769 rows=73561 loops=1)
Q5,1.0,->  Hash Join  (cost=66069.04..386928.73 rows=455728 width=38) (actual time=2666.803..8070.177 rows=455588 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2636.671..2636.671 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=27727.41..335484.91 rows=2278641 width=8) (actual time=28.105..4540.452 rows=2275543 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.629..492.946 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5873.07..269196.27 rows=569080 width=20) (actual time=27.635..6313.576 rows=568242 loops=1)
Q3,1.0,->  Hash Join  (cost=106087.27..493824.87 rows=1448963 width=12) (actual time=404.302..7827.016 rows=1445400 loops=1)
Q3,1.0,->  Hash  (cost=493824.87..493824.87 rows=1448963 width=12) (actual time=8312.678..8312.678 rows=1445400 loops=1)
Q3,1.0,->  Hash  (cost=45936.82..45936.82 rows=298785 width=4) (actual time=374.862..374.862 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6849.31 rows=298785 width=0) (actual time=64.919..64.919 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56415.63..402385.07 rows=7274275 width=16) (actual time=27.468..5154.833 rows=7208316 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=254833.45..1738470.44 rows=32862639 width=12) (actual time=120.017..20362.394 rows=32657324 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6924.01..45936.82 rows=298785 width=4) (actual time=73.450..301.490 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.014..3927.926 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=8541.998..8541.998 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597844.78..641418.01 rows=58770 width=20) (actual time=9341.798..9894.114 rows=63827 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6582.70 rows=382896 width=0) (actual time=82.989..82.989 rows=382532 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6678.43..52007.45 rows=382896 width=4) (actual time=91.368..598.316 rows=382532 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.319..31.449 rows=3945 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=32.508..32.508 rows=3945 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.308..30.819 rows=3945 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=4991.910..5135.688 rows=1586780 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.291..146.725 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8103 width=30) (actual time=0.020..1155.064 rows=7788 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=158.331..3947.391 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=158.192..158.192 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.253..28.474 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.306..27.845 rows=4010 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.68 rows=20013 width=0) (actual time=9.006..9.006 rows=21781 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.288..27.244 rows=4010 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.19..34901.16 rows=22035 width=4) (actual time=12.651..298.704 rows=21781 loops=1)
Q19,1.0,->  Nested Loop  (cost=12865.05..608491.97 rows=1110 width=8) (actual time=33.569..1570.263 rows=1118 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4002.13 rows=399013 width=0) (actual time=4.139..4.139 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.87 rows=7918 width=0) (actual time=3.515..3.515 rows=8037 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.83 rows=7913 width=0) (actual time=3.531..3.531 rows=8135 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.51 rows=7882 width=0) (actual time=3.335..3.335 rows=8154 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12864.49..26484.00 rows=4724 width=30) (actual time=31.838..270.871 rows=4919 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=16) (actual time=0.006..2471.548 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1676896.73 rows=60404273 width=8) (actual time=0.006..9054.008 rows=59984909 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1676896.73 rows=60404273 width=8) (actual time=0.014..7855.871 rows=59984909 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.040 rows=30 loops=2062)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.040 rows=30 loops=2062)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.40 rows=1997 width=0) (actual time=0.971..0.971 rows=2062 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.90..6616.54 rows=1997 width=4) (actual time=1.316..36.009 rows=2062 loops=1)
Q16,1.0,Sort  (cost=413163.46..413233.02 rows=27822 width=40) (actual time=9719.435..9722.050 rows=27838 loops=1)
Q16,1.0,->  Hash  (cost=50996.92..50996.92 rows=296759 width=40) (actual time=1275.416..1275.416 rows=297366 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403424.26..411109.65 rows=27822 width=40) (actual time=8926.135..9661.080 rows=27838 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2483.60..50996.92 rows=296759 width=40) (actual time=34.764..1141.293 rows=297366 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1971080.66 rows=2229745 width=12) (actual time=0.008..17745.770 rows=2247547 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1971080.66 rows=2229745 width=12) (actual time=0.016..18305.887 rows=2247547 loops=1)
Q14,1.0,->  Hash Join  (cost=93830.24..1155846.63 rows=796121 width=29) (actual time=1395.609..27776.057 rows=773578 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8308.24..1058382.82 rows=796121 width=12) (actual time=119.881..25676.471 rows=773578 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..443852.85 rows=14863763 width=8) (actual time=0.018..6697.971 rows=14838229 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..735837.29 rows=14863763 width=8) (actual time=776.109..17566.825 rows=15338245 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=20) (actual time=0.010..4325.627 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2424719.03 rows=287718 width=15) (actual time=0.262..23691.287 rows=312520 loops=1)
Q12,1.0,->  Hash Join  (cost=593129.56..3026839.78 rows=287718 width=27) (actual time=9459.173..33473.089 rows=312520 loops=1)
Q12,1.0,->  Hash  (cost=404880.36..404880.36 rows=15059936 width=20) (actual time=9390.415..9390.415 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.334..39.032 rows=3961 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.299..25.075 rows=3961 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.004..2397.786 rows=316880 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=40.041..2893.529 rows=316880 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=40.002..40.002 rows=3961 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.940..25.940 rows=3961 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.272..24.431 rows=3961 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.315..38.347 rows=3961 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1827907.41 rows=59143178 width=20) (actual time=0.013..18669.487 rows=58727246 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1827907.41 rows=14992944 width=12) (actual time=0.016..16933.587 rows=14808293 loops=1)
Q10,1.0,->  Hash  (cost=269654.69..269654.69 rows=577176 width=8) (actual time=5582.936..5582.936 rows=574267 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5956.05..269654.69 rows=577176 width=8) (actual time=27.604..5392.800 rows=574267 loops=1)
