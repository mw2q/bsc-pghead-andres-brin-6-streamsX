Q21,709507.0,->  Nested Loop Semi Join  (cost=2406.31..2843565.63 rows=1 width=34) (actual time=47.747..34708.611 rows=709507 loops=1)
Q18,401900.5,->  GroupAggregate  (cost=10191316.81..11020236.66 rows=30142540 width=39) (actual time=65482.395..65482.680 rows=75 loops=1)
Q3,317577.9,->  Sort  (cost=2546094.68..2554034.13 rows=3175779 width=20) (actual time=37320.983..37320.987 rows=10 loops=1)
Q18,100499.4,->  Hash Join  (cost=2184734.36..2799808.45 rows=7537460 width=39) (actual time=41478.719..46772.805 rows=75 loops=1)
Q18,100499.4,->  Hash Join  (cost=2115706.36..2617718.55 rows=7537460 width=20) (actual time=40649.570..45943.474 rows=75 loops=1)
Q18,100499.4,->  Hash  (cost=2799808.45..2799808.45 rows=7537460 width=39) (actual time=46772.947..46772.947 rows=75 loops=1)
Q18,57414.3,->  Sort  (cost=10191316.81..10266673.16 rows=30142540 width=39) (actual time=65482.381..65482.418 rows=525 loops=1)
Q18,57414.3,->  Hash Join  (cost=2894026.70..5622603.42 rows=30142540 width=39) (actual time=47182.742..65481.633 rows=525 loops=1)
Q18,53597.3,->  Hash  (cost=2065458.81..2065458.81 rows=4019804 width=4) (actual time=40549.279..40549.279 rows=75 loops=1)
Q18,53597.3,->  HashAggregate  (cost=1975013.22..2025260.77 rows=4019804 width=8) (actual time=36019.141..40549.124 rows=75 loops=1)
Q21,39407.0,->  Nested Loop Anti Join  (cost=2406.88..2843567.41 rows=1 width=26) (actual time=49.605..37542.108 rows=39407 loops=1)
Q10,28395.7,->  Sort  (cost=2286836.09..2288255.87 rows=567914 width=176) (actual time=29913.367..29913.368 rows=20 loops=1)
Q9,24901.9,->  Sort  (cost=1168747.08..1168747.40 rows=130 width=46) (actual time=90126.357..90621.333 rows=3237255 loops=1)
Q9,24901.9,->  Nested Loop  (cost=66874.62..1168738.51 rows=130 width=24) (actual time=642.241..81176.857 rows=3237255 loops=1)
Q9,24901.9,->  Nested Loop  (cost=66874.18..1168675.51 rows=130 width=24) (actual time=642.215..48954.554 rows=3237255 loops=1)
Q9,24901.9,->  Nested Loop  (cost=66873.89..1168633.56 rows=130 width=28) (actual time=642.205..38986.919 rows=3237255 loops=1)
Q9,24901.9,->  Hash Join  (cost=66876.18..1168742.51 rows=130 width=46) (actual time=642.300..84510.415 rows=3237255 loops=1)
Q2,4825.0,->  Merge Join  (cost=465687.84..894393.17 rows=1 width=190) (actual time=6097.071..8053.508 rows=4825 loops=1)
Q21,4021.0,->  HashAggregate  (cost=2843567.42..2843567.43 rows=1 width=26) (actual time=37590.844..37591.921 rows=4021 loops=1)
Q15,3780.0,->  Subquery Scan on revenue5  (cost=1741043.60..1741128.65 rows=3780 width=12) (actual time=49230.543..49242.189 rows=1 loops=1)
Q15,3780.0,->  Sort  (cost=1741353.26..1741362.71 rows=3780 width=12) (actual time=49242.210..49242.211 rows=1 loops=1)
Q15,3780.0,Merge Join  (cost=3465489.77..3470587.68 rows=3780 width=79) (actual time=49287.561..49287.564 rows=1 loops=1)
Q15,3780.0,->  HashAggregate  (cost=1741043.60..1741090.85 rows=3780 width=12) (actual time=49230.542..49242.187 rows=1 loops=1)
Q7,765.2,Sort  (cost=2133037.90..2133045.55 rows=3061 width=64) (actual time=23634.332..23634.332 rows=4 loops=1)
Q7,765.2,->  HashAggregate  (cost=2132814.76..2132860.67 rows=3061 width=64) (actual time=23634.276..23634.280 rows=4 loops=1)
Q8,363.5,Sort  (cost=1672920.94..1672922.76 rows=727 width=38) (actual time=10742.759..10742.759 rows=2 loops=1)
Q8,363.5,->  HashAggregate  (cost=1672873.66..1672886.38 rows=727 width=38) (actual time=10742.724..10742.725 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2843567.44..2843567.44 rows=1 width=26) (actual time=37593.037..37593.046 rows=100 loops=1)
Q21,100.0,Limit  (cost=2843567.44..2843567.44 rows=1 width=26) (actual time=37593.039..37593.057 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=894393.18..894393.18 rows=1 width=190) (actual time=8058.470..8058.485 rows=100 loops=1)
Q2,100.0,Limit  (cost=894393.18..894393.18 rows=1 width=190) (actual time=8058.472..8058.497 rows=100 loops=1)
Q11,35.5,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=8719.179..8720.259 rows=8991 loops=1)
Q11,35.5,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=8639.078..8714.167 rows=8991 loops=1)
Q3,28.0,->  HashAggregate  (cost=2445709.45..2477467.24 rows=3175779 width=20) (actual time=37259.146..37300.093 rows=113259 loops=1)
Q15,26.4,->  HashAggregate  (cost=1724051.16..1724088.96 rows=3780 width=12) (actual time=21117.652..21146.691 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=736414)
Q14,14.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7635.75 rows=748775 width=0) (actual time=119.522..119.522 rows=10728960 loops=1)
Q3,10.5,->  Hash Join  (cost=766647.59..2398072.76 rows=3175779 width=20) (actual time=9812.240..36966.630 rows=299908 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2413.16 rows=320153 width=0) (actual time=34.798..34.798 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.077 rows=8 loops=431508)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.583..3.583 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.595..3.595 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.257..0.257 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.283..0.283 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.267..0.267 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1204355)
Q5,5.0,Sort  (cost=1865790.05..1865790.11 rows=25 width=34) (actual time=15515.401..15515.402 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1865789.22..1865789.47 rows=25 width=34) (actual time=15515.351..15515.352 rows=5 loops=1)
Q4,5.0,Sort  (cost=1482241.01..1482241.01 rows=1 width=16) (actual time=15414.982..15414.982 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.06 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=572621)
Q4,5.0,->  HashAggregate  (cost=1482240.99..1482241.00 rows=1 width=16) (actual time=15414.934..15414.936 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=709507)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5813.83 rows=577383 width=0) (actual time=27.690..27.690 rows=2540800 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5761.57 rows=572157 width=0) (actual time=27.338..27.338 rows=2551040 loops=1)
Q13,4.3,Sort  (cost=847665.75..847666.25 rows=200 width=8) (actual time=27852.632..27852.633 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=847656.11..847658.11 rows=200 width=8) (actual time=27852.556..27852.563 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.011..0.012 rows=4 loops=457038)
Q17,3.7,->  Nested Loop  (cost=82.52..113069.46 rows=19964 width=4) (actual time=1.584..204.312 rows=5267 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5958.74..1481469.64 rows=154269 width=16) (actual time=27.877..15093.590 rows=525170 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.015..0.037 rows=3 loops=1979)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243292.64 rows=32419285 width=0) (actual time=119.033..119.033 rows=10728960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.294..0.362 rows=3 loops=21780)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55387.54 rows=7379673 width=0) (actual time=27.343..27.343 rows=2551040 loops=1)
Q15,2.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..211193.72 rows=28139429 width=0) (actual time=119.120..119.120 rows=10686720 loops=1)
Q15,2.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..211193.72 rows=28139429 width=0) (actual time=118.357..118.357 rows=10676480 loops=1)
Q22,2.3,Sort  (cost=694827.25..694827.26 rows=3 width=20) (actual time=8587.470..8587.470 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641860.30..641860.34 rows=3 width=20) (actual time=8587.421..8587.422 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.035..0.050 rows=2 loops=6534)
Q20,2.0,->  Nested Loop  (cost=754.49..11669240.06 rows=29316 width=4) (actual time=13.257..8131.583 rows=58973 loops=1)
Q20,2.0,->  Hash  (cost=11669240.06..11669240.06 rows=29316 width=4) (actual time=8166.370..8166.370 rows=58973 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.80 rows=200180 width=0) (actual time=4.211..4.211 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403488.90..404971.35 rows=592979 width=40) (actual time=8821.744..8968.067 rows=1190118 loops=1)
Q16,2.0,->  Hash Join  (cost=54741.48..346629.27 rows=592979 width=40) (actual time=1243.253..5380.865 rows=1190118 loops=1)
Q12,2.0,Sort  (cost=3041007.64..3041007.64 rows=1 width=27) (actual time=34255.555..34255.556 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3041007.62..3041007.63 rows=1 width=27) (actual time=34255.505..34255.505 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=345709.49..2251847.11 rows=567914 width=176) (actual time=6116.177..27677.129 rows=1148250 loops=1)
Q10,2.0,->  Hash Join  (cost=345707.93..2244036.73 rows=567914 width=154) (actual time=6116.153..27265.445 rows=1148250 loops=1)
Q10,2.0,->  Hash Join  (cost=276679.93..2166490.02 rows=567914 width=12) (actual time=4823.285..25282.678 rows=1148250 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1902482.88 rows=798572 width=34) (actual time=47.705..23118.011 rows=1525499 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.546..2660.594 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817035.59 rows=20015002 width=8) (actual time=0.005..17002.720 rows=37928797 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2322853.43 rows=389735 width=38) (actual time=47.732..30427.885 rows=736414 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.033..0.506 rows=56 loops=1)
Q20,1.5,Sort  (cost=11672049.58..11672052.51 rows=1173 width=51) (actual time=8198.707..8198.840 rows=1815 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669649.51..11671989.78 rows=1173 width=51) (actual time=8166.857..8197.106 rows=1815 loops=1)
Q1,1.5,Sort  (cost=4186146.96..4186146.97 rows=6 width=20) (actual time=89048.773..89048.773 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4186146.77..4186146.88 rows=6 width=20) (actual time=89048.721..89048.722 rows=4 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..27320.23 rows=3637364 width=0) (actual time=27.405..27.405 rows=2551040 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.00 rows=597800 width=0) (actual time=4.216..4.216 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2266044.96..2271724.10 rows=567914 width=176) (actual time=29589.045..29776.403 rows=381982 loops=1)
Q9,1.3,GroupAggregate  (cost=1168747.08..1168751.63 rows=130 width=46) (actual time=90136.318..92736.454 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2907.55 rows=140458 width=0) (actual time=447.440..447.440 rows=190954 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2942.67..41907.69 rows=140458 width=24) (actual time=455.676..556.276 rows=190954 loops=1)
Q18,1.3,Limit  (cost=10191316.81..10191319.56 rows=100 width=39) (actual time=65482.397..65482.692 rows=75 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91309.33 rows=9116133 width=0) (actual time=119.051..119.051 rows=10696960 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=108106 width=4) (actual time=0.011..610.566 rows=107877 loops=1)
Q9,1.0,->  Hash Join  (cost=66873.32..352148.68 rows=431736 width=16) (actual time=642.076..4697.870 rows=431508 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=108106 width=4) (actual time=641.592..641.592 rows=107877 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.669..1869.329 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=396.68..1625428.09 rows=116826 width=20) (actual time=6.975..8502.108 rows=119744 loops=1)
Q8,1.0,->  Nested Loop  (cost=396.25..1436031.67 rows=386799 width=16) (actual time=6.945..4139.437 rows=393608 loops=1)
Q8,1.0,->  Nested Loop  (cost=38727.12..1671968.99 rows=23306 width=16) (actual time=1966.658..10667.104 rows=23997 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.67 rows=31 width=20) (actual time=0.025..0.292 rows=30 loops=13153)
Q8,1.0,->  Hash Join  (cost=38728.68..1672407.54 rows=23306 width=38) (actual time=1966.700..10704.481 rows=23997 loops=1)
Q8,1.0,->  Hash Join  (cost=38726.83..1664429.98 rows=23365 width=16) (actual time=1966.641..10529.839 rows=23997 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1957.696..1957.696 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..392.48 rows=12807 width=0) (actual time=4.603..4.603 rows=13153 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=395.68..27461.38 rows=12807 width=4) (actual time=6.907..166.049 rows=13153 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.613..364.649 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=8) (actual time=0.006..3166.768 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2120062.40 rows=1459962 width=42) (actual time=827.536..22897.484 rows=1462505 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2131905.70 rows=60604 width=64) (actual time=874.717..23540.779 rows=58390 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..532007.47 rows=1204795 width=30) (actual time=827.498..9025.221 rows=1204355 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.043..781.646 rows=120534 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.034..44.521 rows=8022 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=826.984..826.984 rows=120534 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=46.780..46.780 rows=8022 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91405.26..1366182.25 rows=383695 width=8) (actual time=119.867..23685.173 rows=380119 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.728..2117.695 rows=300963 loops=1)
Q5,1.0,->  Nested Loop  (cost=66235.50..1845897.04 rows=1833363 width=46) (actual time=2260.187..14709.422 rows=1825095 loops=1)
Q5,1.0,->  Hash Join  (cost=70914.50..1865057.74 rows=73148 width=34) (actual time=2321.510..15429.269 rows=73047 loops=1)
Q5,1.0,->  Hash Join  (cost=66234.94..389017.09 rows=458459 width=38) (actual time=2260.151..8460.060 rows=457038 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2230.614..2230.614 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=27893.30..337494.76 rows=2292293 width=8) (actual time=27.584..5343.771 rows=2275776 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.627..413.072 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5958.17..268646.92 rows=577383 width=20) (actual time=27.851..7776.491 rows=572621 loops=1)
Q3,1.0,->  Hash Join  (cost=106996.78..496754.21 rows=1479674 width=12) (actual time=710.824..9151.580 rows=1462578 loops=1)
Q3,1.0,->  Hash  (cost=496754.21..496754.21 rows=1479674 width=12) (actual time=9686.264..9686.264 rows=1462578 loops=1)
Q3,1.0,->  Hash  (cost=46004.82..46004.82 rows=300760 width=4) (actual time=681.365..681.365 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6892.13 rows=300760 width=0) (actual time=65.735..65.735 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57232.46..404519.38 rows=7379673 width=16) (actual time=27.503..5743.043 rows=7314888 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251397.46..1729492.52 rows=32419285 width=12) (actual time=119.772..21483.671 rows=32232107 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6967.32..46004.82 rows=300760 width=4) (actual time=74.237..591.092 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.012..3726.998 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=7855.369..7855.369 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597845.00..641419.46 rows=58779 width=20) (actual time=8365.073..8566.343 rows=63697 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6583.17 rows=382955 width=0) (actual time=82.489..82.489 rows=381775 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6678.91..52009.48 rows=382955 width=4) (actual time=90.751..324.782 rows=381775 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.268..46.197 rows=4021 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=47.617..47.617 rows=4021 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.254..45.331 rows=4021 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6096.766..6243.250 rows=1602608 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.317..146.507 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8156 width=30) (actual time=0.093..1141.847 rows=8121 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=157.757..5005.852 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=157.616..157.616 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.259..28.424 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.287..28.773 rows=4023 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.081..9.081 rows=21780 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.271..28.201 rows=4023 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.650..219.872 rows=21780 loops=1)
Q19,1.0,->  Nested Loop  (cost=12849.82..609023.77 rows=1115 width=8) (actual time=34.215..1835.871 rows=1151 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4002.13 rows=399013 width=0) (actual time=4.289..4.289 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.95 rows=8026 width=0) (actual time=3.521..3.521 rows=7903 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.51 rows=7882 width=0) (actual time=3.397..3.397 rows=8154 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.51 rows=7881 width=0) (actual time=3.573..3.573 rows=8047 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12849.25..26478.96 rows=4728 width=30) (actual time=32.720..282.460 rows=4885 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.006..2495.227 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673587.81 rows=60285081 width=8) (actual time=0.004..8686.203 rows=60046221 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673587.81 rows=60285081 width=8) (actual time=0.014..8023.180 rows=60046221 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.041 rows=30 loops=1979)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.041 rows=30 loops=1979)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.26 rows=1983 width=0) (actual time=0.925..0.925 rows=1979 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.75..6576.99 rows=1983 width=4) (actual time=1.258..33.099 rows=1979 loops=1)
Q16,1.0,Sort  (cost=413234.90..413304.50 rows=27841 width=40) (actual time=9617.410..9620.909 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51013.22..51013.22 rows=296962 width=40) (actual time=1240.691..1240.691 rows=297698 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403488.90..411179.55 rows=27841 width=40) (actual time=8821.801..9558.003 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2487.40..51013.22 rows=296962 width=40) (actual time=34.863..1118.488 rows=297698 loops=1)
Q15,1.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.019..35.451 rows=97885 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=211760.13..1701394.57 rows=2265659 width=12) (actual time=119.856..19300.306 rows=2247673 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=211760.13..1701394.57 rows=2265659 width=12) (actual time=119.120..26076.021 rows=2247673 loops=1)
Q14,1.0,->  Hash Join  (cost=93344.95..1138324.37 rows=748775 width=29) (actual time=1914.735..24665.199 rows=750235 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7822.95..1041570.75 rows=748775 width=12) (actual time=120.286..21988.500 rows=750235 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..443852.85 rows=14863763 width=8) (actual time=0.035..7181.165 rows=14838229 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..735837.29 rows=14863763 width=8) (actual time=1036.723..17888.016 rows=15338245 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=20) (actual time=0.006..4905.858 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2431950.14 rows=290362 width=15) (actual time=0.164..23873.747 rows=312576 loops=1)
Q12,1.0,->  Hash Join  (cost=594902.33..3035926.29 rows=290362 width=27) (actual time=9716.987..33935.046 rows=312576 loops=1)
Q12,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=20) (actual time=9672.041..9672.041 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.324..39.699 rows=4029 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.311..25.640 rows=4029 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=26.576..4196.397 rows=322320 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=40.837..4107.505 rows=322320 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=40.697..40.697 rows=4029 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.473..26.473 rows=4029 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.283..24.995 rows=4029 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.302..39.023 rows=4029 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1827907.41 rows=58955984 width=20) (actual time=0.020..18560.257 rows=58538328 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1827907.41 rows=14992944 width=12) (actual time=0.014..17479.678 rows=14808293 loops=1)
Q10,1.0,->  Hash  (cost=269527.96..269527.96 rows=572157 width=8) (actual time=4819.865..4819.865 rows=573422 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5904.61..269527.96 rows=572157 width=8) (actual time=27.505..4652.018 rows=573422 loops=1)
