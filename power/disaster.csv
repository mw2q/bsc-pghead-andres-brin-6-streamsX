Q21,724709.0,->  Nested Loop Semi Join  (cost=2406.31..2843565.63 rows=1 width=34) (actual time=40.381..39388.891 rows=724709 loops=1)
Q3,315261.2,->  Sort  (cost=2526966.71..2534848.24 rows=3152612 width=20) (actual time=43892.368..43892.369 rows=10 loops=1)
Q18,300225.0,->  GroupAggregate  (cost=10150866.62..10976485.48 rows=30022504 width=39) (actual time=67082.646..67082.985 rows=100 loops=1)
Q18,67635.0,->  Hash Join  (cost=2176869.25..2789657.69 rows=7507492 width=39) (actual time=41986.662..48409.298 rows=111 loops=1)
Q18,67635.0,->  Hash Join  (cost=2107841.25..2608017.31 rows=7507492 width=20) (actual time=40892.502..47314.837 rows=111 loops=1)
Q18,67635.0,->  Hash  (cost=2789657.69..2789657.69 rows=7507492 width=39) (actual time=48409.592..48409.592 rows=111 loops=1)
Q18,42828.1,->  Sort  (cost=10150866.62..10225922.88 rows=30022504 width=39) (actual time=67082.627..67082.658 rows=701 loops=1)
Q21,40946.0,->  Nested Loop Anti Join  (cost=2406.88..2843567.41 rows=1 width=26) (actual time=40.390..42268.993 rows=40946 loops=1)
Q18,38639.0,->  Hash Join  (cost=2883501.34..5601212.03 rows=30022504 width=39) (actual time=48833.820..67081.251 rows=777 loops=1)
Q18,36214.4,->  Hash  (cost=2057593.70..2057593.70 rows=4019804 width=4) (actual time=40727.893..40727.893 rows=111 loops=1)
Q18,36214.4,->  HashAggregate  (cost=1967148.11..2017395.66 rows=4019804 width=8) (actual time=36521.352..40727.352 rows=111 loops=1)
Q9,29497.8,->  Sort  (cost=1045753.69..1045753.97 rows=110 width=46) (actual time=85773.409..86214.351 rows=3244766 loops=1)
Q9,29497.8,->  Nested Loop  (cost=66674.42..1045746.34 rows=110 width=24) (actual time=694.316..77407.459 rows=3244766 loops=1)
Q9,29497.8,->  Nested Loop  (cost=66673.98..1045693.03 rows=110 width=24) (actual time=694.220..47338.769 rows=3244766 loops=1)
Q9,29497.8,->  Nested Loop  (cost=66673.69..1045657.53 rows=110 width=28) (actual time=694.208..37335.400 rows=3244766 loops=1)
Q9,29497.8,->  Hash Join  (cost=66675.98..1045749.96 rows=110 width=46) (actual time=694.385..80548.483 rows=3244766 loops=1)
Q10,28474.4,->  Sort  (cost=2274328.51..2275752.23 rows=569488 width=176) (actual time=35102.143..35102.148 rows=20 loops=1)
Q2,4693.0,->  Merge Join  (cost=465687.84..892145.90 rows=1 width=190) (actual time=5858.470..7728.121 rows=4693 loops=1)
Q21,4095.0,->  HashAggregate  (cost=2843567.42..2843567.43 rows=1 width=26) (actual time=42332.609..42333.687 rows=4095 loops=1)
Q15,3729.0,->  Subquery Scan on revenue0  (cost=1380299.92..1380383.82 rows=3729 width=12) (actual time=52913.096..52917.330 rows=1 loops=1)
Q15,3729.0,->  Sort  (cost=1380605.04..1380614.36 rows=3729 width=12) (actual time=52917.366..52917.366 rows=1 loops=1)
Q15,3729.0,Merge Join  (cost=2744241.92..2749339.06 rows=3729 width=79) (actual time=52938.419..52938.421 rows=1 loops=1)
Q15,3729.0,->  HashAggregate  (cost=1380299.92..1380346.53 rows=3729 width=12) (actual time=52913.095..52917.328 rows=1 loops=1)
Q7,765.2,Sort  (cost=2126730.77..2126738.42 rows=3061 width=64) (actual time=23443.207..23443.207 rows=4 loops=1)
Q7,765.2,->  HashAggregate  (cost=2126507.63..2126553.54 rows=3061 width=64) (actual time=23443.141..23443.150 rows=4 loops=1)
Q8,363.5,Sort  (cost=1729735.44..1729737.25 rows=727 width=38) (actual time=12959.828..12959.828 rows=2 loops=1)
Q8,363.5,->  HashAggregate  (cost=1729688.16..1729700.88 rows=727 width=38) (actual time=12959.784..12959.785 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2843567.44..2843567.44 rows=1 width=26) (actual time=42334.874..42334.881 rows=100 loops=1)
Q21,100.0,Limit  (cost=2843567.44..2843567.44 rows=1 width=26) (actual time=42334.875..42334.892 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=892145.91..892145.92 rows=1 width=190) (actual time=7732.829..7732.846 rows=100 loops=1)
Q2,100.0,Limit  (cost=892145.91..892145.92 rows=1 width=190) (actual time=7732.830..7732.856 rows=100 loops=1)
Q11,33.4,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=6918.818..6919.824 rows=9574 loops=1)
Q11,33.4,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=6843.818..6913.128 rows=9574 loops=1)
Q3,27.8,->  HashAggregate  (cost=2427313.78..2458839.90 rows=3152612 width=20) (actual time=43834.209..43871.106 rows=113347 loops=1)
Q15,26.8,->  HashAggregate  (cost=1363552.68..1363589.97 rows=3729 width=12) (actual time=24652.295..24677.756 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=752114)
Q14,14.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7395.34 rows=724734 width=0) (actual time=120.947..120.947 rows=10664960 loops=1)
Q3,10.5,->  Hash Join  (cost=762164.97..2380024.60 rows=3152612 width=20) (actual time=7793.375..43531.053 rows=299390 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2403.01 rows=318800 width=0) (actual time=34.601..34.601 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.014..0.073 rows=8 loops=432072)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.631..3.631 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.630..3.630 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.238..0.238 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.256..0.256 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.262..0.262 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1203555)
Q5,5.0,Sort  (cost=1902917.30..1902917.36 rows=25 width=34) (actual time=16053.678..16053.678 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1902916.47..1902916.72 rows=25 width=34) (actual time=16053.620..16053.622 rows=5 loops=1)
Q4,5.0,Sort  (cost=1477362.05..1477362.06 rows=1 width=16) (actual time=14241.736..14241.737 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.08 rows=5 width=4) (actual time=0.016..0.016 rows=1 loops=574943)
Q4,5.0,->  HashAggregate  (cost=1477362.03..1477362.04 rows=1 width=16) (actual time=14241.654..14241.657 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=724709)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5777.38 rows=573738 width=0) (actual time=27.682..27.682 rows=2535680 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5777.38 rows=573738 width=0) (actual time=27.646..27.646 rows=2535680 loops=1)
Q13,4.3,Sort  (cost=844750.32..844750.82 rows=200 width=8) (actual time=26331.892..26331.894 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=844740.68..844742.68 rows=200 width=8) (actual time=26331.810..26331.818 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.04 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=457839)
Q17,3.5,->  Nested Loop  (cost=78.36..112219.47 rows=19695 width=4) (actual time=2.172..175.765 rows=5474 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5921.38..1476594.03 rows=153601 width=16) (actual time=27.941..13920.905 rows=527048 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.010..0.023 rows=3 loops=1995)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.50 rows=1 width=8) (actual time=0.284..0.354 rows=3 loops=21685)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55506.91 rows=7395588 width=0) (actual time=27.502..27.502 rows=2535680 loops=1)
Q3,2.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..240083.62 rows=31991416 width=0) (actual time=118.532..118.532 rows=10664960 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..44164.10 rows=5883214 width=0) (actual time=27.279..27.279 rows=2535680 loops=1)
Q22,2.3,Sort  (cost=691234.27..691234.27 rows=3 width=20) (actual time=8340.831..8340.832 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=638306.28..638306.32 rows=3 width=20) (actual time=8340.771..8340.772 rows=7 loops=1)
Q15,2.3,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.021..16.696 rows=42993 loops=1)
Q20,2.2,->  Nested Loop  (cost=753.99..10615592.26 rows=26651 width=4) (actual time=12.734..8297.789 rows=58781 loops=1)
Q20,2.2,->  Hash  (cost=10615592.26..10615592.26 rows=26651 width=4) (actual time=8334.470..8334.470 rows=58781 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.033..0.048 rows=2 loops=6327)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2013.80 rows=200180 width=0) (actual time=4.339..4.339 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403199.04..404676.34 rows=590921 width=40) (actual time=10062.472..10207.487 rows=1184900 loops=1)
Q16,2.0,->  Hash Join  (cost=54684.36..346551.57 rows=590921 width=40) (actual time=1455.970..6807.730 rows=1184900 loops=1)
Q12,2.0,Sort  (cost=3022866.78..3022866.78 rows=1 width=27) (actual time=34817.073..34817.074 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3022866.76..3022866.77 rows=1 width=27) (actual time=34817.018..34817.019 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344250.18..2239242.56 rows=569488 width=176) (actual time=11306.013..32928.648 rows=1148524 loops=1)
Q10,2.0,->  Hash Join  (cost=344248.61..2231410.54 rows=569488 width=154) (actual time=11305.986..32530.669 rows=1148524 loops=1)
Q10,2.0,->  Hash Join  (cost=275220.61..2153840.22 rows=569488 width=12) (actual time=9676.178..30128.372 rows=1148524 loops=1)
Q21,1.9,->  Nested Loop  (cost=2405.75..2322853.43 rows=389735 width=38) (actual time=40.367..34309.733 rows=752114 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1902482.88 rows=798572 width=34) (actual time=40.253..26404.110 rows=1555769 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.510..3789.250 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817035.59 rows=20015002 width=8) (actual time=0.005..20425.511 rows=37967116 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.030..0.469 rows=56 loops=1)
Q20,1.6,Sort  (cost=10618360.68..10618363.35 rows=1066 width=51) (actual time=8367.593..8367.699 rows=1810 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10615968.40..10618307.07 rows=1066 width=51) (actual time=8334.896..8366.017 rows=1810 loops=1)
Q9,1.5,GroupAggregate  (cost=1045753.69..1045757.54 rows=110 width=46) (actual time=85782.692..88325.000 rows=175 loops=1)
Q1,1.5,Sort  (cost=4193568.29..4193568.31 rows=6 width=20) (actual time=89821.920..89821.920 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4193568.11..4193568.21 rows=6 width=20) (actual time=89821.870..89821.872 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.00 rows=597800 width=0) (actual time=4.134..4.134 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2253479.76..2259174.64 rows=569488 width=176) (actual time=34771.997..34964.024 rows=381730 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2906.08 rows=140308 width=0) (actual time=410.340..410.340 rows=190700 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2941.16..41902.25 rows=140308 width=24) (actual time=418.418..518.843 rows=190700 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=92090 width=4) (actual time=0.013..661.254 rows=108018 loops=1)
Q9,1.1,->  Hash Join  (cost=66673.12..351308.86 rows=367774 width=16) (actual time=694.073..4712.018 rows=432072 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=92090 width=4) (actual time=693.557..693.557 rows=108018 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91267.55 rows=9111955 width=0) (actual time=119.831..119.831 rows=10664960 loops=1)
Q15,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91495.93 rows=12179724 width=0) (actual time=118.963..118.963 rows=10664960 loops=1)
Q15,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91495.93 rows=12179724 width=0) (actual time=118.714..118.714 rows=10664960 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.688..1897.234 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.15..1681896.22 rows=121264 width=20) (actual time=7.526..10622.316 rows=121182 loops=1)
Q8,1.0,->  Nested Loop  (cost=420.72..1485312.46 rows=401491 width=16) (actual time=7.257..5994.023 rows=400078 loops=1)
Q8,1.0,->  Nested Loop  (cost=38751.59..1728749.20 rows=24191 width=16) (actual time=1997.061..12873.823 rows=24381 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.16..1729204.34 rows=24191 width=38) (actual time=1997.116..12915.732 rows=24381 loops=1)
Q8,1.0,->  Hash Join  (cost=38751.30..1720923.64 rows=24253 width=16) (actual time=1996.972..12688.373 rows=24381 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1987.512..1987.512 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..412.73 rows=13373 width=0) (actual time=4.944..4.944 rows=13309 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=13309)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=416.07..28170.52 rows=13373 width=4) (actual time=7.184..277.026 rows=13309 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.040..0.414 rows=30 loops=13309)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.667..370.341 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=8) (actual time=0.006..3594.051 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2113782.16 rows=1455607 width=42) (actual time=625.705..22765.773 rows=1458474 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2125601.28 rows=60423 width=64) (actual time=665.292..23352.274 rows=57868 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..530594.42 rows=1201199 width=30) (actual time=625.543..8989.719 rows=1203555 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.035..587.516 rows=119974 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.039..37.455 rows=7954 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=625.041..625.041 rows=119974 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=39.432..39.432 rows=7954 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91466.50..1362958.49 rows=795774 width=8) (actual time=120.606..28284.921 rows=796670 loops=1)
Q5,1.0,->  Nested Loop  (cost=83073.18..1883188.61 rows=1813560 width=46) (actual time=2357.615..15191.878 rows=1830276 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.869..2216.643 rows=300963 loops=1)
Q5,1.0,->  Hash Join  (cost=87752.18..1902192.89 rows=72358 width=34) (actual time=2427.462..15972.155 rows=73131 loops=1)
Q5,1.0,->  Hash Join  (cost=83072.61..437881.03 rows=453503 width=38) (actual time=2357.588..7611.380 rows=457839 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2328.105..2328.105 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=44730.98..386501.19 rows=2267514 width=8) (actual time=27.444..4353.590 rows=2284131 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.687..432.936 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5920.82..268048.89 rows=573738 width=20) (actual time=27.887..4356.571 rows=574943 loops=1)
Q3,1.0,->  Hash Join  (cost=107090.84..495587.74 rows=1479660 width=12) (actual time=407.189..7187.640 rows=1477374 loops=1)
Q3,1.0,->  Hash  (cost=495587.74..495587.74 rows=1479660 width=12) (actual time=7667.075..7667.075 rows=1477374 loops=1)
Q3,1.0,->  Hash  (cost=45983.65..45983.65 rows=300110 width=4) (actual time=377.495..377.495 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6879.25 rows=300110 width=0) (actual time=63.163..63.163 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57355.81..403322.66 rows=7395588 width=16) (actual time=27.662..4585.345 rows=7384060 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=248081.48..1714447.18 rows=31991416 width=12) (actual time=119.278..30135.220 rows=32015839 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6954.28..45983.65 rows=300110 width=4) (actual time=71.031..306.386 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=4) (actual time=0.015..3729.016 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=4) (actual time=7653.360..7653.360 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=594300.30..637865.91 rows=58716 width=20) (actual time=8119.563..8319.208 rows=63586 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6556.08 rows=382546 width=0) (actual time=71.384..71.384 rows=381968 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6651.71..51971.55 rows=382546 width=4) (actual time=79.114..288.849 rows=381968 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.294..39.073 rows=4095 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=40.156..40.156 rows=4095 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.282..38.393 rows=4095 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=5858.028..5981.368 rows=1603270 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.351..175.249 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8098 width=30) (actual time=0.139..1120.307 rows=7843 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=186.658..4824.315 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=186.513..186.513 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.262..34.078 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.289..30.198 rows=4095 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=8.595..8.595 rows=21685 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.271..29.596 rows=4095 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=753.56..34891.02 rows=20020 width=4) (actual time=12.147..587.043 rows=21685 loops=1)
Q19,1.0,->  Nested Loop  (cost=12872.08..613870.58 rows=1119 width=8) (actual time=31.496..1560.560 rows=1168 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4002.13 rows=399013 width=0) (actual time=4.144..4.144 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.51 rows=8181 width=0) (actual time=3.542..3.542 rows=8090 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.99 rows=7928 width=0) (actual time=3.310..3.310 rows=7979 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.47 rows=7875 width=0) (actual time=3.475..3.475 rows=7904 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.026..0.026 rows=30 loops=4802)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12867.34..26629.60 rows=4786 width=30) (actual time=31.133..277.022 rows=4802 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.004..3552.669 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1666923.07 rows=60045007 width=8) (actual time=0.011..7968.369 rows=60045669 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666923.07 rows=60045007 width=8) (actual time=0.005..8099.464 rows=60045669 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.033 rows=30 loops=1995)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.033 rows=30 loops=1995)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.11 rows=1968 width=0) (actual time=1.549..1.549 rows=1995 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.60..6530.36 rows=1968 width=4) (actual time=1.872..46.630 rows=1995 loops=1)
Q16,1.0,Sort  (cost=412910.49..412979.85 rows=27744 width=40) (actual time=10860.044..10861.882 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=50968.99..50968.99 rows=295931 width=40) (actual time=1453.476..1453.476 rows=296383 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403199.04..410862.99 rows=27744 width=40) (actual time=10062.534..10800.483 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2476.99..50968.99 rows=295931 width=40) (actual time=34.711..1321.633 rows=296383 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=92054.17..1341223.03 rows=2232965 width=12) (actual time=119.766..22474.432 rows=2246034 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=92054.17..1341223.03 rows=2232965 width=12) (actual time=119.548..25950.253 rows=2246034 loops=1)
Q14,1.0,->  Hash Join  (cost=93098.53..1122830.43 rows=724734 width=29) (actual time=1539.708..41454.309 rows=751371 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7576.53..1026437.42 rows=724734 width=12) (actual time=121.773..38988.401 rows=751371 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441209.30 rows=14850169 width=8) (actual time=0.022..7716.099 rows=14852415 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..732989.83 rows=14850169 width=8) (actual time=785.853..17306.526 rows=15352436 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=20) (actual time=0.007..5078.777 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2417485.66 rows=287630 width=15) (actual time=0.040..24365.133 rows=311290 loops=1)
Q12,1.0,->  Hash Join  (cost=591359.14..3017833.23 rows=287630 width=27) (actual time=9678.476..34466.412 rows=311290 loops=1)
Q12,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=20) (actual time=9633.596..9633.596 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.298..46.509 rows=3981 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.292..26.707 rows=3981 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=27.620..2512.836 rows=318480 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=47.759..4003.908 rows=318480 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=47.723..47.723 rows=3981 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=27.557..27.557 rows=3981 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.263..26.065 rows=3981 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.284..45.648 rows=3981 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817035.59 rows=59413313 width=20) (actual time=0.027..18494.350 rows=59409723 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1817035.59 rows=14903771 width=12) (actual time=0.012..17352.812 rows=14822992 loops=1)
Q10,1.0,->  Hash  (cost=268048.89..268048.89 rows=573738 width=8) (actual time=9672.636..9672.636 rows=574122 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5920.82..268048.89 rows=573738 width=8) (actual time=27.912..9391.607 rows=574122 loops=1)
